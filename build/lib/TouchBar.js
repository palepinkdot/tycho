"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),semver_1=(0,tslib_1.__importDefault)(require("semver")),remote_1=require("@electron/remote"),mobx_1=require("mobx"),environment_1=require("../environment");class FranzTouchBar{constructor(e,t){this.stores=void 0,this.actions=void 0,this.build=void 0,this.stores=e,this.actions=t;try{environment_1.isMac&&semver_1.default.gt(environment_1.osRelease,"16.6.0")&&(this.build=(0,mobx_1.autorun)(this._build.bind(this)))}catch(e){console.error(e)}}_build(){const e=(0,remote_1.getCurrentWindow)();if(this.stores.user.isLoggedIn){const{TouchBarButton:t,TouchBarSpacer:s}=remote_1.TouchBar,r=[];for(const e of this.stores.services.allDisplayed)r.push(new t({label:`${e.name}${e.unreadDirectMessageCount>0?" 🔴":""} ${0===e.unreadDirectMessageCount&&e.unreadIndirectMessageCount>0?" ⚪️":""}`,backgroundColor:e.isActive&&"#3498DB",click:()=>{this.actions.service.setActive({serviceId:e.id})}}),new s({size:"small"}));const o=new remote_1.TouchBar({items:r});e.setTouchBar(o)}else e.setTouchBar(null)}}exports.default=FranzTouchBar;