"use strict";const Route=use("Route"),{API_VERSION:API_VERSION}=require("../../environment-remote"),migrate=require("./migrate");migrate();const OnlyAllowFerdi=async({request:e,response:r},o)=>e.header("X-Franz-Version")?(await o(),!0):r.status(403).redirect("/");Route.get("health",(({response:e})=>e.send({api:"success",db:"success"}))).middleware(OnlyAllowFerdi),Route.group((()=>{Route.post("auth/signup","UserController.signup"),Route.post("auth/login","UserController.login"),Route.get("me","UserController.me"),Route.put("me","UserController.updateMe"),Route.post("service","ServiceController.create"),Route.put("service/reorder","ServiceController.reorder"),Route.put("service/:id","ServiceController.edit"),Route.delete("service/:id","ServiceController.delete"),Route.get("me/services","ServiceController.list"),Route.get("recipes","RecipeController.list"),Route.get("recipes/search","RecipeController.search"),Route.get("recipes/popular","RecipeController.popularRecipes"),Route.get("recipes/download/:recipe","RecipeController.download"),Route.post("recipes/update","RecipeController.update"),Route.put("workspace/:id","WorkspaceController.edit"),Route.delete("workspace/:id","WorkspaceController.delete"),Route.post("workspace","WorkspaceController.create"),Route.get("workspace","WorkspaceController.list")})).prefix(API_VERSION).middleware(OnlyAllowFerdi),Route.group((()=>{Route.get("icon/:id","ServiceController.icon")})).prefix(API_VERSION),Route.post("import","UserController.import"),Route.get("import",(({view:e})=>e.render("import"))),Route.get("export","UserController.export"),Route.post("transfer","UserController.importFerdi"),Route.get("transfer",(({view:e})=>e.render("transfer"))),Route.get("/",(({view:e})=>e.render("index")));