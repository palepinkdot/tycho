"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),electron_1=require("electron"),electron_dl_1=require("electron-dl"),mime_types_1=(0,tslib_1.__importDefault)(require("mime-types")),fs_extra_1=require("fs-extra"),debug=require("debug")("Ferdi:ipcApi:download");function decodeBase64Image(e){const t=e.match(/^data:([+/A-Za-z-]+);base64,(.+)$/);return 3!==t?.length?new Error("Invalid input string"):Buffer.from(t[2],"base64")}exports.default=e=>{electron_1.ipcMain.on("download-file",(async(t,{url:r,content:o,fileOptions:i={}})=>{const n=electron_1.BrowserWindow.getFocusedWindow();try{if(o){const t=mime_types_1.default.extension(i.mime),r=`${i.name}.${t}`;try{const t=await electron_1.dialog.showSaveDialog(e.mainWindow,{defaultPath:r});if(t.canceled)return;const i=decodeBase64Image(o);(0,fs_extra_1.writeFileSync)(t.filePath,i,"binary"),debug("File blob saved to",t.filePath)}catch(e){console.error(e)}}else{const e=await(0,electron_dl_1.download)(n,r,{saveAs:!0});debug("File saved to",e.savePath)}}catch(e){console.error(e)}}))};