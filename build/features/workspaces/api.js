"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.resetApiRequests=exports.updateWorkspaceRequest=exports.deleteWorkspaceRequest=exports.createWorkspaceRequest=exports.getUserWorkspacesRequest=exports.workspaceApi=void 0;const tslib_1=require("tslib"),lodash_1=require("lodash"),auth_1=require("../../api/utils/auth"),Request_1=(0,tslib_1.__importDefault)(require("../../stores/lib/Request")),Workspace_1=(0,tslib_1.__importDefault)(require("./models/Workspace")),apiBase_1=(0,tslib_1.__importDefault)(require("../../api/apiBase")),debug=require("debug")("Ferdi:feature:workspaces:api");exports.workspaceApi={getUserWorkspaces:async()=>{const e=`${(0,apiBase_1.default)()}/workspace`;debug("getUserWorkspaces GET",e);const s=await(0,auth_1.sendAuthRequest)(e,{method:"GET"});if(debug("getUserWorkspaces RESULT",s),!s.ok)throw new Error("Couldn't getUserWorkspaces");return(await s.json()).map((e=>new Workspace_1.default(e)))},createWorkspace:async e=>{const s=`${(0,apiBase_1.default)()}/workspace`,t={method:"POST",body:JSON.stringify({name:e})};debug("createWorkspace POST",s,t);const r=await(0,auth_1.sendAuthRequest)(s,t);if(debug("createWorkspace RESULT",r),!r.ok)throw new Error("Couldn't createWorkspace");return new Workspace_1.default(await r.json())},deleteWorkspace:async e=>{const s=`${(0,apiBase_1.default)()}/workspace/${e.id}`;debug("deleteWorkspace DELETE",s);const t=await(0,auth_1.sendAuthRequest)(s,{method:"DELETE"});if(debug("deleteWorkspace RESULT",t),!t.ok)throw new Error("Couldn't deleteWorkspace");return!0},updateWorkspace:async e=>{const s=`${(0,apiBase_1.default)()}/workspace/${e.id}`,t={method:"PUT",body:JSON.stringify((0,lodash_1.pick)(e,["name","services"]))};debug("updateWorkspace UPDATE",s,t);const r=await(0,auth_1.sendAuthRequest)(s,t);if(debug("updateWorkspace RESULT",r),!r.ok)throw new Error("Couldn't updateWorkspace");return new Workspace_1.default(await r.json())}},exports.getUserWorkspacesRequest=new Request_1.default(exports.workspaceApi,"getUserWorkspaces"),exports.createWorkspaceRequest=new Request_1.default(exports.workspaceApi,"createWorkspace"),exports.deleteWorkspaceRequest=new Request_1.default(exports.workspaceApi,"deleteWorkspace"),exports.updateWorkspaceRequest=new Request_1.default(exports.workspaceApi,"updateWorkspace");const resetApiRequests=()=>{exports.getUserWorkspacesRequest.reset(),exports.createWorkspaceRequest.reset(),exports.deleteWorkspaceRequest.reset(),exports.updateWorkspaceRequest.reset()};exports.resetApiRequests=resetApiRequests;