"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_reactRouter=require("react-router"),_reactIntl=require("react-intl"),_SearchInput=_interopRequireDefault(require("../../ui/SearchInput")),_Infobox=_interopRequireDefault(require("../../ui/Infobox")),_Loader=_interopRequireDefault(require("../../ui/Loader")),_FAB=_interopRequireDefault(require("../../ui/FAB")),_ServiceItem=_interopRequireDefault(require("./ServiceItem")),_Appear=_interopRequireDefault(require("../../ui/effects/Appear")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const messages=(0,_reactIntl.defineMessages)({headline:{id:"settings.services.headline",defaultMessage:[{type:0,value:"Your services"}]},searchService:{id:"settings.searchService",defaultMessage:[{type:0,value:"Search service"}]},noServicesAdded:{id:"settings.services.noServicesAdded",defaultMessage:[{type:0,value:"Start by adding a service."}]},noServiceFound:{id:"settings.services.nothingFound",defaultMessage:[{type:0,value:"Sorry, but no service matched your search term."}]},discoverServices:{id:"settings.services.discoverServices",defaultMessage:[{type:0,value:"Discover services"}]},servicesRequestFailed:{id:"settings.services.servicesRequestFailed",defaultMessage:[{type:0,value:"Could not load your services"}]},tryReloadServices:{id:"settings.account.tryReloadServices",defaultMessage:[{type:0,value:"Try again"}]},updatedInfo:{id:"settings.services.updatedInfo",defaultMessage:[{type:0,value:"Your changes have been saved"}]},deletedInfo:{id:"settings.services.deletedInfo",defaultMessage:[{type:0,value:"Service has been deleted"}]}});class ServicesDashboard extends _react.Component{render(){const{services:e,isLoading:s,toggleService:t,filterServices:r,resetFilter:i,goTo:a,servicesRequestFailed:n,retryServicesRequest:d,status:c,searchNeedle:u}=this.props,{intl:l}=this.props;return(0,_jsxRuntime.jsxs)("div",{className:"settings__main",children:[(0,_jsxRuntime.jsx)("div",{className:"settings__header",children:(0,_jsxRuntime.jsx)("h1",{children:l.formatMessage(messages.headline)})}),(0,_jsxRuntime.jsxs)("div",{className:"settings__body",children:[(e.length>0||u)&&!s&&(0,_jsxRuntime.jsx)(_SearchInput.default,{placeholder:l.formatMessage(messages.searchService),onChange:e=>r({needle:e}),onReset:()=>i(),autoFocus:!0}),!s&&n&&(0,_jsxRuntime.jsx)(_Infobox.default,{icon:"alert",type:"danger",ctaLabel:l.formatMessage(messages.tryReloadServices),ctaLoading:s,ctaOnClick:d,children:l.formatMessage(messages.servicesRequestFailed)}),c.length>0&&c.includes("updated")&&(0,_jsxRuntime.jsx)(_Appear.default,{children:(0,_jsxRuntime.jsx)(_Infobox.default,{type:"success",icon:"checkbox-marked-circle-outline",dismissable:!0,children:l.formatMessage(messages.updatedInfo)})}),c.length>0&&c.includes("service-deleted")&&(0,_jsxRuntime.jsx)(_Appear.default,{children:(0,_jsxRuntime.jsx)(_Infobox.default,{type:"success",icon:"checkbox-marked-circle-outline",dismissable:!0,children:l.formatMessage(messages.deletedInfo)})}),!s&&0===e.length&&!u&&(0,_jsxRuntime.jsxs)("div",{className:"align-middle settings__empty-state",children:[(0,_jsxRuntime.jsxs)("p",{className:"settings__empty-text",children:[(0,_jsxRuntime.jsx)("span",{className:"emoji",children:(0,_jsxRuntime.jsx)("img",{src:"./assets/images/emoji/star.png",alt:""})}),l.formatMessage(messages.noServicesAdded)]}),(0,_jsxRuntime.jsx)(_reactRouter.Link,{to:"/settings/recipes",className:"button",children:l.formatMessage(messages.discoverServices)})]}),!s&&0===e.length&&u&&(0,_jsxRuntime.jsx)("div",{className:"align-middle settings__empty-state",children:(0,_jsxRuntime.jsxs)("p",{className:"settings__empty-text",children:[(0,_jsxRuntime.jsx)("span",{className:"emoji",children:(0,_jsxRuntime.jsx)("img",{src:"./assets/images/emoji/dontknow.png",alt:""})}),l.formatMessage(messages.noServiceFound)]})}),s?(0,_jsxRuntime.jsx)(_Loader.default,{}):(0,_jsxRuntime.jsx)("table",{className:"service-table",children:(0,_jsxRuntime.jsx)("tbody",{children:e.map((e=>(0,_jsxRuntime.jsx)(_ServiceItem.default,{service:e,toggleAction:()=>t({serviceId:e.id}),goToServiceForm:()=>a(`/settings/services/edit/${e.id}`)},e.id)))})}),(0,_jsxRuntime.jsx)(_FAB.default,{children:(0,_jsxRuntime.jsx)(_reactRouter.Link,{to:"/settings/recipes",children:"+"})})]})]})}}ServicesDashboard.propTypes={services:_mobxReact.PropTypes.arrayOrObservableArray.isRequired,isLoading:_propTypes.default.bool.isRequired,toggleService:_propTypes.default.func.isRequired,filterServices:_propTypes.default.func.isRequired,resetFilter:_propTypes.default.func.isRequired,goTo:_propTypes.default.func.isRequired,servicesRequestFailed:_propTypes.default.bool.isRequired,retryServicesRequest:_propTypes.default.func.isRequired,status:_mobxReact.PropTypes.arrayOrObservableArray.isRequired,searchNeedle:_propTypes.default.string},ServicesDashboard.defaultProps={searchNeedle:""};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.observer)(ServicesDashboard));exports.default=_default;