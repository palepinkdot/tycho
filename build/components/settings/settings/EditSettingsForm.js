"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _remote=require("@electron/remote"),_react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_prettyBytes=_interopRequireDefault(require("pretty-bytes")),_reactIntl=require("react-intl"),_js=require("@mdi/js"),_Form=_interopRequireDefault(require("../../../lib/Form")),_Button=_interopRequireDefault(require("../../ui/Button")),_Toggle=_interopRequireDefault(require("../../ui/Toggle")),_Select=_interopRequireDefault(require("../../ui/Select")),_Input=_interopRequireDefault(require("../../ui/Input")),_Infobox=_interopRequireDefault(require("../../ui/Infobox")),_config=require("../../../config"),_environment=require("../../../environment"),_environmentRemote=require("../../../environment-remote"),_urlHelpers=require("../../../helpers/url-helpers"),_globalMessages=_interopRequireDefault(require("../../../i18n/globalMessages")),_icon=require("../../ui/icon"),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const debug=require("debug")("Ferdi:EditSettingsForm"),messages=(0,_reactIntl.defineMessages)({headlineGeneral:{id:"settings.app.headlineGeneral",defaultMessage:[{type:0,value:"General"}]},sentryInfo:{id:"settings.app.sentryInfo",defaultMessage:[{type:0,value:"Sending telemetry data allows us to find errors in Ferdi - we will not send any personal information like your message data!"}]},hibernateInfo:{id:"settings.app.hibernateInfo",defaultMessage:[{type:0,value:"By default, Ferdi will keep all your services open and loaded in the background so they are ready when you want to use them. Service Hibernation will unload your services after a specified amount. This is useful to save RAM or keeping services from slowing down your computer."}]},inactivityLockInfo:{id:"settings.app.inactivityLockInfo",defaultMessage:[{type:0,value:"Minutes of inactivity, after which Ferdi should automatically lock. Use 0 to disable"}]},todoServerInfo:{id:"settings.app.todoServerInfo",defaultMessage:[{type:0,value:'This server will be used for the "Ferdi Todo" feature.'}]},lockedPassword:{id:"settings.app.lockedPassword",defaultMessage:[{type:0,value:"Password"}]},lockedPasswordInfo:{id:"settings.app.lockedPasswordInfo",defaultMessage:[{type:0,value:"Please make sure to set a password you'll remember. If you loose this password, you will have to reinstall Ferdi."}]},lockInfo:{id:"settings.app.lockInfo",defaultMessage:[{type:0,value:"Password Lock allows you to keep your messages protected. Using Password Lock, you will be prompted to enter your password everytime you start Ferdi or lock Ferdi yourself using the lock symbol in the bottom left corner or the shortcut "},{type:1,value:"lockShortcut"},{type:0,value:"."}]},scheduledDNDTimeInfo:{id:"settings.app.scheduledDNDTimeInfo",defaultMessage:[{type:0,value:"Times in 24-Hour-Format. End time can be before start time (e.g. start 17:00, end 09:00) to enable Do-not-Disturb overnight."}]},scheduledDNDInfo:{id:"settings.app.scheduledDNDInfo",defaultMessage:[{type:0,value:"Scheduled Do-not-Disturb allows you to define a period of time in which you do not want to get Notifications from Ferdi."}]},headlineLanguage:{id:"settings.app.headlineLanguage",defaultMessage:[{type:0,value:"Language"}]},headlineUpdates:{id:"settings.app.headlineUpdates",defaultMessage:[{type:0,value:"Updates"}]},headlineAppearance:{id:"settings.app.headlineAppearance",defaultMessage:[{type:0,value:"Appearance"}]},universalDarkModeInfo:{id:"settings.app.universalDarkModeInfo",defaultMessage:[{type:0,value:"Universal Dark Mode tries to dynamically generate dark mode styles for services that are otherwise not currently supported."}]},accentColorInfo:{id:"settings.app.accentColorInfo",defaultMessage:[{type:0,value:"Write your accent color in a CSS-compatible format. (Default: "},{type:1,value:"defaultAccentColor"},{type:0,value:")"}]},headlinePrivacy:{id:"settings.app.headlinePrivacy",defaultMessage:[{type:0,value:"Privacy"}]},headlineAdvanced:{id:"settings.app.headlineAdvanced",defaultMessage:[{type:0,value:"Advanced"}]},translationHelp:{id:"settings.app.translationHelp",defaultMessage:[{type:0,value:"Help us to translate Ferdi into your language."}]},spellCheckerLanguageInfo:{id:"settings.app.spellCheckerLanguageInfo",defaultMessage:[{type:0,value:"Ferdi uses your Mac's build-in spellchecker to check for typos. If you want to change the languages the spellchecker checks for, you can do so in your Mac's System Preferences."}]},subheadlineCache:{id:"settings.app.subheadlineCache",defaultMessage:[{type:0,value:"Cache"}]},cacheInfo:{id:"settings.app.cacheInfo",defaultMessage:[{type:0,value:"Ferdi cache is currently using "},{type:1,value:"size"},{type:0,value:" of disk space."}]},cacheNotCleared:{id:"settings.app.cacheNotCleared",defaultMessage:[{type:0,value:"Couldn't clear all cache"}]},buttonClearAllCache:{id:"settings.app.buttonClearAllCache",defaultMessage:[{type:0,value:"Clear cache"}]},subheadlineFerdiProfile:{id:"settings.app.subheadlineFerdiProfile",defaultMessage:[{type:0,value:"Ferdi Profile"}]},buttonOpenFerdiProfileFolder:{id:"settings.app.buttonOpenFerdiProfileFolder",defaultMessage:[{type:0,value:"Open Profile folder"}]},buttonOpenFerdiServiceRecipesFolder:{id:"settings.app.buttonOpenFerdiServiceRecipesFolder",defaultMessage:[{type:0,value:"Open Service Recipes folder"}]},buttonSearchForUpdate:{id:"settings.app.buttonSearchForUpdate",defaultMessage:[{type:0,value:"Check for updates"}]},buttonInstallUpdate:{id:"settings.app.buttonInstallUpdate",defaultMessage:[{type:0,value:"Restart & install update"}]},updateStatusSearching:{id:"settings.app.updateStatusSearching",defaultMessage:[{type:0,value:"Searching for updates..."}]},updateStatusAvailable:{id:"settings.app.updateStatusAvailable",defaultMessage:[{type:0,value:"Update available, downloading..."}]},updateStatusUpToDate:{id:"settings.app.updateStatusUpToDate",defaultMessage:[{type:0,value:"You are using the latest version of Ferdi"}]},currentVersion:{id:"settings.app.currentVersion",defaultMessage:[{type:0,value:"Current version:"}]},appRestartRequired:{id:"settings.app.restartRequired",defaultMessage:[{type:0,value:"Changes require restart"}]},servicesUpdated:{id:"infobar.servicesUpdated",defaultMessage:[{type:0,value:"Your services have been updated."}]},buttonReloadServices:{id:"infobar.buttonReloadServices",defaultMessage:[{type:0,value:"Reload services"}]},numberOfColumns:{id:"settings.app.form.splitColumns",defaultMessage:[{type:0,value:"Number of columns"}]}}),Hr=()=>(0,_jsxRuntime.jsx)("hr",{style:{marginBottom:20}});class EditSettingsForm extends _react.Component{constructor(...e){super(...e),this.state={activeSetttingsTab:"general",clearCacheButtonClicked:!1},this.onClearCacheClicked=()=>{this.setState({clearCacheButtonClicked:!0})}}setActiveSettingsTab(e){this.setState({activeSetttingsTab:e})}submit(e){e.preventDefault(),this.props.form.submit({onSuccess:e=>{const s=e.values();this.props.onSubmit(s)},onError:()=>{}})}render(){const{checkForUpdates:e,installUpdate:s,form:t,isCheckingForUpdates:a,isAdaptableDarkModeEnabled:i,isUpdateAvailable:n,noUpdateAvailable:l,updateIsReadyToInstall:r,updateFailed:o,showServicesUpdatedInfoBar:d,isClearingAllCache:u,onClearAllCache:c,getCacheSize:p,automaticUpdates:g,isDarkmodeEnabled:m,isSplitModeEnabled:_,isTodosActivated:f,hasAddedTodosAsService:x,isOnline:j}=this.props,{intl:h}=this.props;let R=messages.buttonSearchForUpdate;R=a?messages.updateStatusSearching:n?messages.updateStatusAvailable:messages.buttonSearchForUpdate;const{lockingFeatureEnabled:b,scheduledDNDEnabled:v}=window.ferdi.stores.settings.all.app;let y,T;if("advanced"===this.state.activeSetttingsTab){const e=p();debug("cacheSizeBytes:",e),"number"==typeof e?(y=(0,_prettyBytes.default)(e),debug("cacheSize:",y),T=this.state.clearCacheButtonClicked&&!1===u&&0!==e):(y="â€¦",T=!1)}const S=(0,_environmentRemote.userDataPath)(),M=(0,_environmentRemote.userDataRecipesPath)();return(0,_jsxRuntime.jsxs)("div",{className:"settings__main",children:[(0,_jsxRuntime.jsx)("div",{className:"settings__header",children:(0,_jsxRuntime.jsx)("h1",{children:h.formatMessage(_globalMessages.default.settings)})}),(0,_jsxRuntime.jsx)("div",{className:"settings__body",children:(0,_jsxRuntime.jsxs)("form",{onSubmit:e=>this.submit(e),onChange:e=>this.submit(e),id:"form",children:[(0,_jsxRuntime.jsxs)("div",{className:"recipes__navigation",children:[(0,_jsxRuntime.jsx)("h2",{id:"general",className:"general"===this.state.activeSetttingsTab?"badge badge--primary":"badge",onClick:()=>{this.setActiveSettingsTab("general")},children:h.formatMessage(messages.headlineGeneral)}),(0,_jsxRuntime.jsx)("h2",{id:"appearance",className:"appearance"===this.state.activeSetttingsTab?"badge badge--primary":"badge",onClick:()=>{this.setActiveSettingsTab("appearance")},children:h.formatMessage(messages.headlineAppearance)}),(0,_jsxRuntime.jsx)("h2",{id:"privacy",className:"privacy"===this.state.activeSetttingsTab?"badge badge--primary":"badge",onClick:()=>{this.setActiveSettingsTab("privacy")},children:h.formatMessage(messages.headlinePrivacy)}),(0,_jsxRuntime.jsx)("h2",{id:"language",className:"language"===this.state.activeSetttingsTab?"badge badge--primary":"badge",onClick:()=>{this.setActiveSettingsTab("language")},children:h.formatMessage(messages.headlineLanguage)}),(0,_jsxRuntime.jsx)("h2",{id:"advanced",className:"advanced"===this.state.activeSetttingsTab?"badge badge--primary":"badge",onClick:()=>{this.setActiveSettingsTab("advanced")},children:h.formatMessage(messages.headlineAdvanced)}),(0,_jsxRuntime.jsxs)("h2",{id:"updates",className:"updates"===this.state.activeSetttingsTab?"badge badge--primary":"badge",onClick:()=>{this.setActiveSettingsTab("updates")},children:[h.formatMessage(messages.headlineUpdates),g&&(r||n||d)&&(0,_jsxRuntime.jsx)("span",{className:"update-available",children:"â€¢"})]})]}),"general"===this.state.activeSetttingsTab&&(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("autoLaunchOnStart")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("runInBackground")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("confirmOnQuit")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("enableSystemTray")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("reloadAfterResume")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("startMinimized")}),_environment.isWindows&&(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("minimizeToSystemTray")}),_environment.isWindows&&(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("closeToSystemTray")}),(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("navigationBarBehaviour")}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("hibernationStrategy")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("hibernateOnStartup")}),(0,_jsxRuntime.jsx)("p",{className:"settings__message",style:{borderTop:0,marginTop:0,paddingTop:0,marginBottom:"2rem"},children:(0,_jsxRuntime.jsx)("span",{children:h.formatMessage(messages.hibernateInfo)})}),(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("wakeUpStrategy")}),(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("wakeUpHibernationStrategy")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("wakeUpHibernationSplay")}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("keepAllWorkspacesLoaded")}),(0,_jsxRuntime.jsx)(Hr,{}),!x&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("enableTodos")}),f&&(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("predefinedTodoServer")}),"isUsingCustomTodoService"===t.$("predefinedTodoServer").value&&(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Input.default,{placeholder:"Todo Server",onChange:e=>this.submit(e),field:t.$("customTodoServer")}),(0,_jsxRuntime.jsx)("p",{className:"settings__message",style:{borderTop:0,marginTop:0,paddingTop:0,marginBottom:"2rem"},children:h.formatMessage(messages.todoServerInfo)})]})]}),(0,_jsxRuntime.jsx)(Hr,{})]}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("scheduledDNDEnabled")}),v&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)("div",{style:{display:"flex",justifyContent:"center"},children:[(0,_jsxRuntime.jsx)("div",{style:{padding:"0 1rem",width:"100%"},children:(0,_jsxRuntime.jsx)(_Input.default,{placeholder:"17:00",onChange:e=>this.submit(e),field:t.$("scheduledDNDStart"),type:"time"})}),(0,_jsxRuntime.jsx)("div",{style:{padding:"0 1rem",width:"100%"},children:(0,_jsxRuntime.jsx)(_Input.default,{placeholder:"09:00",onChange:e=>this.submit(e),field:t.$("scheduledDNDEnd"),type:"time"})})]}),(0,_jsxRuntime.jsx)("p",{children:h.formatMessage(messages.scheduledDNDTimeInfo)})]}),(0,_jsxRuntime.jsx)("p",{className:"settings__message",style:{borderTop:0,marginTop:0,paddingTop:0,marginBottom:"2rem"},children:(0,_jsxRuntime.jsx)("span",{children:h.formatMessage(messages.scheduledDNDInfo)})})]}),"appearance"===this.state.activeSetttingsTab&&(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("showDisabledServices")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("showServiceName")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("showMessageBadgeWhenMuted")}),_environment.isMac&&(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("showDragArea")}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("adaptableDarkMode")}),!i&&(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("darkMode")}),(m||i)&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("universalDarkMode")}),(0,_jsxRuntime.jsx)("p",{className:"settings__message",style:{borderTop:0,marginTop:0,paddingTop:0,marginBottom:"2rem"},children:(0,_jsxRuntime.jsx)("span",{children:h.formatMessage(messages.universalDarkModeInfo)})})]}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("splitMode")}),_&&(0,_jsxRuntime.jsx)(_Input.default,{type:"number",min:_config.SPLIT_COLUMNS_MIN,max:_config.SPLIT_COLUMNS_MAX,placeholder:`${_config.SPLIT_COLUMNS_MIN}-${_config.SPLIT_COLUMNS_MAX}`,onChange:e=>this.submit(e),field:t.$("splitColumns")}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("serviceRibbonWidth")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("useVerticalStyle")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("alwaysShowWorkspaces")}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("iconSize")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("enableLongPressServiceHint")}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Input.default,{placeholder:"Accent Color",onChange:e=>this.submit(e),field:t.$("accentColor")}),(0,_jsxRuntime.jsx)("p",{children:h.formatMessage(messages.accentColorInfo,{defaultAccentColor:_config.DEFAULT_APP_SETTINGS.accentColor})})]}),"privacy"===this.state.activeSetttingsTab&&(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("privateNotifications")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("clipboardNotifications")}),(_environment.isWindows||_environment.isMac)&&(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("notifyTaskBarOnMessage")}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("searchEngine")}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("sentry")}),(0,_jsxRuntime.jsx)("p",{className:"settings__help",children:h.formatMessage(messages.sentryInfo)}),(0,_jsxRuntime.jsx)("p",{className:"settings__help",children:h.formatMessage(messages.appRestartRequired)}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("lockingFeatureEnabled")}),b&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[_environment.isMac&&_remote.systemPreferences.canPromptTouchID()&&(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("useTouchIdToUnlock")}),(0,_jsxRuntime.jsx)(_Input.default,{placeholder:h.formatMessage(messages.lockedPassword),onChange:e=>this.submit(e),field:t.$("lockedPassword"),type:"password",scorePassword:!0,showPasswordToggle:!0}),(0,_jsxRuntime.jsx)("p",{children:h.formatMessage(messages.lockedPasswordInfo)}),(0,_jsxRuntime.jsx)(_Input.default,{placeholder:"Lock after inactivity",onChange:e=>this.submit(e),field:t.$("inactivityLock"),autoFocus:!0}),(0,_jsxRuntime.jsx)("p",{children:h.formatMessage(messages.inactivityLockInfo)})]}),(0,_jsxRuntime.jsx)("p",{className:"settings__message",style:{borderTop:0,marginTop:0,paddingTop:0,marginBottom:"2rem"},children:(0,_jsxRuntime.jsx)("span",{children:h.formatMessage(messages.lockInfo,{lockShortcut:`${(0,_environment.lockFerdiShortcutKey)(!1)}`})})})]}),"language"===this.state.activeSetttingsTab&&(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("locale"),showLabel:!1}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("enableSpellchecking")}),!_environment.isMac&&t.$("enableSpellchecking").value&&(0,_jsxRuntime.jsx)(_Select.default,{field:t.$("spellcheckerLanguage")}),_environment.isMac&&t.$("enableSpellchecking").value&&(0,_jsxRuntime.jsx)("p",{className:"settings__help",children:h.formatMessage(messages.spellCheckerLanguageInfo)}),(0,_jsxRuntime.jsx)("p",{className:"settings__help",children:h.formatMessage(messages.appRestartRequired)}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsxs)("a",{href:_config.FRANZ_TRANSLATION,target:"_blank",className:"link",rel:"noreferrer",children:[h.formatMessage(messages.translationHelp)," ",(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiOpenInNew})]})]}),"advanced"===this.state.activeSetttingsTab&&(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("enableGPUAcceleration")}),(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("enableGlobalHideShortcut")}),(0,_jsxRuntime.jsx)("p",{className:"settings__help indented__help",children:h.formatMessage(messages.appRestartRequired)}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsx)(_Input.default,{placeholder:"User Agent",onChange:e=>this.submit(e),field:t.$("userAgentPref")}),(0,_jsxRuntime.jsx)("p",{className:"settings__help",children:h.formatMessage(_globalMessages.default.userAgentHelp)}),(0,_jsxRuntime.jsx)("p",{className:"settings__help",children:h.formatMessage(messages.appRestartRequired)}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsxs)("div",{className:"settings__settings-group",children:[(0,_jsxRuntime.jsx)("h3",{children:h.formatMessage(messages.subheadlineCache)}),(0,_jsxRuntime.jsx)("p",{children:h.formatMessage(messages.cacheInfo,{size:y})}),T&&(0,_jsxRuntime.jsx)("p",{children:h.formatMessage(messages.cacheNotCleared)}),(0,_jsxRuntime.jsx)("p",{children:(0,_jsxRuntime.jsx)(_Button.default,{buttonType:"secondary",label:h.formatMessage(messages.buttonClearAllCache),onClick:()=>{c(),this.onClearCacheClicked()},disabled:u,loaded:!u})})]}),(0,_jsxRuntime.jsx)(Hr,{}),(0,_jsxRuntime.jsxs)("div",{className:"settings__settings-group",children:[(0,_jsxRuntime.jsx)("h3",{children:h.formatMessage(messages.subheadlineFerdiProfile)}),(0,_jsxRuntime.jsx)("p",{children:(0,_jsxRuntime.jsxs)("div",{className:"settings__open-settings-file-container",children:[(0,_jsxRuntime.jsx)(_Button.default,{buttonType:"secondary",label:h.formatMessage(messages.buttonOpenFerdiProfileFolder),className:"settings__open-settings-file-button",onClick:()=>(0,_urlHelpers.openPath)(S)}),(0,_jsxRuntime.jsx)(_Button.default,{buttonType:"secondary",label:h.formatMessage(messages.buttonOpenFerdiServiceRecipesFolder),className:"settings__open-settings-file-button",onClick:()=>(0,_urlHelpers.openPath)(M)})]})})]})]}),"updates"===this.state.activeSetttingsTab&&(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("automaticUpdates")}),g&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(_environment.isMac||_environment.isWindows||process.env.APPIMAGE)&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_Toggle.default,{field:t.$("beta")}),r?(0,_jsxRuntime.jsx)(_Button.default,{label:h.formatMessage(messages.buttonInstallUpdate),onClick:s}):(0,_jsxRuntime.jsx)(_Button.default,{buttonType:"secondary",label:h.formatMessage(R),onClick:e,disabled:!g||a||n||!j,loaded:!a||!n}),(0,_jsxRuntime.jsx)("br",{})]}),(0,_jsxRuntime.jsxs)("p",{children:[h.formatMessage(messages.currentVersion)," ",_environmentRemote.ferdiVersion]}),l&&(0,_jsxRuntime.jsxs)("p",{children:[h.formatMessage(messages.updateStatusUpToDate),"."]}),o&&(0,_jsxRuntime.jsx)(_Infobox.default,{type:"danger",icon:"alert",children:"An error occured (check the console for more details)"})]}),d?(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)("p",{children:[(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiPowerPlug}),h.formatMessage(messages.servicesUpdated)]}),(0,_jsxRuntime.jsx)(_Button.default,{label:h.formatMessage(messages.buttonReloadServices),onClick:()=>window.location.reload()})]}):(0,_jsxRuntime.jsxs)("p",{children:[(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiPowerPlug}),"Your services are up-to-date."]})]}),(0,_jsxRuntime.jsxs)("p",{className:"settings__message",children:[(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiGithub}),"Ferdi is based on"," ",(0,_jsxRuntime.jsx)("a",{href:`${_config.GITHUB_FRANZ_URL}/franz`,target:"_blank",rel:"noreferrer",children:"Franz"}),", a project published under the"," ",(0,_jsxRuntime.jsx)("a",{href:`${_config.GITHUB_FRANZ_URL}/franz/blob/master/LICENSE`,target:"_blank",rel:"noreferrer",children:"Apache-2.0 License"})]})]})]})})]})}}EditSettingsForm.propTypes={checkForUpdates:_propTypes.default.func.isRequired,installUpdate:_propTypes.default.func.isRequired,form:_propTypes.default.instanceOf(_Form.default).isRequired,onSubmit:_propTypes.default.func.isRequired,isCheckingForUpdates:_propTypes.default.bool.isRequired,isUpdateAvailable:_propTypes.default.bool.isRequired,noUpdateAvailable:_propTypes.default.bool.isRequired,updateIsReadyToInstall:_propTypes.default.bool.isRequired,updateFailed:_propTypes.default.bool.isRequired,isClearingAllCache:_propTypes.default.bool.isRequired,onClearAllCache:_propTypes.default.func.isRequired,getCacheSize:_propTypes.default.func.isRequired,isTodosActivated:_propTypes.default.bool.isRequired,automaticUpdates:_propTypes.default.bool.isRequired,isDarkmodeEnabled:_propTypes.default.bool.isRequired,isAdaptableDarkModeEnabled:_propTypes.default.bool.isRequired,isSplitModeEnabled:_propTypes.default.bool.isRequired,hasAddedTodosAsService:_propTypes.default.bool.isRequired,isOnline:_propTypes.default.bool.isRequired};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.observer)(EditSettingsForm));exports.default=_default;