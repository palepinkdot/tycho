"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_reactIntl=require("react-intl"),_mobxReact=require("mobx-react"),_mobxReactRouter=require("mobx-react-router"),_config=require("../../../config"),_Link=_interopRequireDefault(require("../../ui/Link")),_UIStore=_interopRequireDefault(require("../../../stores/UIStore")),_SettingsStore=_interopRequireDefault(require("../../../stores/SettingsStore")),_UserStore=_interopRequireDefault(require("../../../stores/UserStore")),_globalMessages=_interopRequireDefault(require("../../../i18n/globalMessages")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const messages=(0,_reactIntl.defineMessages)({availableServices:{id:"settings.navigation.availableServices",defaultMessage:[{type:0,value:"Available services"}]},yourServices:{id:"settings.navigation.yourServices",defaultMessage:[{type:0,value:"Your services"}]},yourWorkspaces:{id:"settings.navigation.yourWorkspaces",defaultMessage:[{type:0,value:"Your workspaces"}]},account:{id:"settings.navigation.account",defaultMessage:[{type:0,value:"Account"}]},team:{id:"settings.navigation.team",defaultMessage:[{type:0,value:"Manage Team"}]},supportFerdi:{id:"settings.navigation.supportFerdi",defaultMessage:[{type:0,value:"About Ferdi"}]},logout:{id:"settings.navigation.logout",defaultMessage:[{type:0,value:"Logout"}]}});class SettingsNavigation extends _react.Component{handleLogout(){const e=this.props.stores.settings.app.server===_config.LOCAL_SERVER;localStorage.removeItem("authToken"),e&&this.props.actions.settings.update({type:"app",data:{server:_config.LIVE_FERDI_API}}),this.props.stores.user.isLoggingOut=!0,this.props.stores.router.push("/auth/welcome"),window.location.reload()}render(){const{serviceCount:e,workspaceCount:s,stores:t}=this.props,{intl:a}=this.props,i=t.settings.app.server===_config.LOCAL_SERVER,r=t.settings.app.server===_config.LIVE_FRANZ_API;return(0,_jsxRuntime.jsxs)("div",{className:"settings-navigation",children:[(0,_jsxRuntime.jsx)(_Link.default,{to:"/settings/recipes",className:"settings-navigation__link",activeClassName:"is-active",children:a.formatMessage(messages.availableServices)}),(0,_jsxRuntime.jsxs)(_Link.default,{to:"/settings/services",className:"settings-navigation__link",activeClassName:"is-active",children:[a.formatMessage(messages.yourServices)," ",(0,_jsxRuntime.jsx)("span",{className:"badge",children:e})]}),(0,_jsxRuntime.jsxs)(_Link.default,{to:"/settings/workspaces",className:"settings-navigation__link",activeClassName:"is-active",children:[a.formatMessage(messages.yourWorkspaces)," ",(0,_jsxRuntime.jsx)("span",{className:"badge",children:s})]}),!i&&(0,_jsxRuntime.jsx)(_Link.default,{to:"/settings/user",className:"settings-navigation__link",activeClassName:"is-active",children:a.formatMessage(messages.account)}),r&&(0,_jsxRuntime.jsx)(_Link.default,{to:"/settings/team",className:"settings-navigation__link",activeClassName:"is-active",children:a.formatMessage(messages.team)}),(0,_jsxRuntime.jsxs)(_Link.default,{to:"/settings/app",className:"settings-navigation__link",activeClassName:"is-active",children:[a.formatMessage(_globalMessages.default.settings),t.settings.app.automaticUpdates&&(t.ui.showServicesUpdatedInfoBar||t.app.updateStatus===t.app.updateStatusTypes.AVAILABLE||t.app.updateStatus===t.app.updateStatusTypes.DOWNLOADED)&&(0,_jsxRuntime.jsx)("span",{className:"update-available",children:"â€¢"})]}),(0,_jsxRuntime.jsx)(_Link.default,{to:"/settings/support",className:"settings-navigation__link",activeClassName:"is-active",children:a.formatMessage(messages.supportFerdi)}),(0,_jsxRuntime.jsx)("span",{className:"settings-navigation__expander"}),(0,_jsxRuntime.jsx)("button",{type:"button",to:"/auth/logout",className:"settings-navigation__link",onClick:this.handleLogout.bind(this),children:i?"Exit session":a.formatMessage(messages.logout)})]})}}SettingsNavigation.propTypes={stores:_propTypes.default.shape({ui:_propTypes.default.instanceOf(_UIStore.default).isRequired,user:_propTypes.default.instanceOf(_UserStore.default).isRequired,settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired,router:_propTypes.default.instanceOf(_mobxReactRouter.RouterStore).isRequired}).isRequired,actions:_propTypes.default.shape({settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired}).isRequired,serviceCount:_propTypes.default.number.isRequired,workspaceCount:_propTypes.default.number.isRequired};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(SettingsNavigation)));exports.default=_default;