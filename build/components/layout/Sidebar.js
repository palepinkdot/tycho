"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_reactTooltip=_interopRequireDefault(require("react-tooltip")),_reactIntl=require("react-intl"),_mobxReact=require("mobx-react"),_js=require("@mdi/js"),_Tabbar=_interopRequireDefault(require("../services/tabs/Tabbar")),_environment=require("../../environment"),_todos=require("../../features/todos"),_actions=require("../../features/todos/actions"),_AppStore=_interopRequireDefault(require("../../stores/AppStore")),_SettingsStore=_interopRequireDefault(require("../../stores/SettingsStore")),_globalMessages=_interopRequireDefault(require("../../i18n/globalMessages")),_icon=require("../ui/icon"),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const messages=(0,_reactIntl.defineMessages)({addNewService:{id:"sidebar.addNewService",defaultMessage:[{type:0,value:"Add new service"}]},mute:{id:"sidebar.muteApp",defaultMessage:[{type:0,value:"Disable notifications & audio"}]},unmute:{id:"sidebar.unmuteApp",defaultMessage:[{type:0,value:"Enable notifications & audio"}]},openWorkspaceDrawer:{id:"sidebar.openWorkspaceDrawer",defaultMessage:[{type:0,value:"Open workspace drawer"}]},closeWorkspaceDrawer:{id:"sidebar.closeWorkspaceDrawer",defaultMessage:[{type:0,value:"Close workspace drawer"}]},openTodosDrawer:{id:"sidebar.openTodosDrawer",defaultMessage:[{type:0,value:"Open Ferdi Todos"}]},closeTodosDrawer:{id:"sidebar.closeTodosDrawer",defaultMessage:[{type:0,value:"Close Ferdi Todos"}]},lockFerdi:{id:"sidebar.lockFerdi",defaultMessage:[{type:0,value:"Lock Ferdi"}]}});class Sidebar extends _react.Component{constructor(...e){super(...e),this.state={tooltipEnabled:!0}}componentDidUpdate(){_reactTooltip.default.rebuild()}enableToolTip(){this.setState({tooltipEnabled:!0})}disableToolTip(){this.setState({tooltipEnabled:!1})}updateToolTip(){this.disableToolTip(),setTimeout(this.enableToolTip.bind(this))}render(){const{openSettings:e,toggleMuteApp:s,isAppMuted:t,isWorkspaceDrawerOpen:i,toggleWorkspaceDrawer:o,stores:a,actions:r,isTodosServiceActive:p}=this.props,{intl:d}=this.props,u=_todos.todosStore.isTodosPanelVisible?messages.closeTodosDrawer:messages.openTodosDrawer,n=i?messages.closeWorkspaceDrawer:messages.openWorkspaceDrawer;return(0,_jsxRuntime.jsxs)("div",{className:"sidebar",children:[(0,_jsxRuntime.jsx)(_Tabbar.default,{...this.props,enableToolTip:()=>this.enableToolTip(),disableToolTip:()=>this.disableToolTip(),useVerticalStyle:a.settings.all.app.useVerticalStyle}),(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)("button",{type:"button",onClick:()=>e({path:"recipes"}),className:"sidebar__button sidebar__button--new-service","data-tip":`${d.formatMessage(messages.addNewService)} (${(0,_environment.addNewServiceShortcutKey)(!1)})`,children:(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiPlusBox,size:1.5})}),(0,_jsxRuntime.jsx)("button",{type:"button",onClick:()=>{o(),this.updateToolTip()},className:"sidebar__button sidebar__button--workspaces "+(i?"is-active":""),"data-tip":`${d.formatMessage(n)} (${(0,_environment.workspaceToggleShortcutKey)(!1)})`,children:(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiViewGrid,size:1.5})}),_todos.todosStore.isFeatureEnabledByUser?(0,_jsxRuntime.jsx)("button",{type:"button",onClick:()=>{_actions.todoActions.toggleTodosPanel(),this.updateToolTip()},disabled:p,className:"sidebar__button sidebar__button--todos "+(_todos.todosStore.isTodosPanelVisible?"is-active":""),"data-tip":`${d.formatMessage(u)} (${(0,_environment.todosToggleShortcutKey)(!1)})`,children:(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiCheckAll,size:1.5})}):null,(0,_jsxRuntime.jsx)("button",{type:"button",onClick:()=>{s(),this.updateToolTip()},className:"sidebar__button sidebar__button--audio "+(t?"is-muted":""),"data-tip":`${d.formatMessage(t?messages.unmute:messages.mute)} (${(0,_environment.muteFerdiShortcutKey)(!1)})`,children:(0,_jsxRuntime.jsx)(_icon.Icon,{icon:t?_js.mdiBellOff:_js.mdiBell,size:1.5})}),a.settings.all.app.lockingFeatureEnabled?(0,_jsxRuntime.jsx)("button",{type:"button",className:"sidebar__button",onClick:()=>{r.settings.update({type:"app",data:{locked:!0}})},"data-tip":`${d.formatMessage(messages.lockFerdi)} (${(0,_environment.lockFerdiShortcutKey)(!1)})`,children:(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiLock,size:1.5})}):null]}),(0,_jsxRuntime.jsxs)("button",{type:"button",onClick:()=>e({path:"app"}),className:"sidebar__button sidebar__button--settings","data-tip":`${d.formatMessage(_globalMessages.default.settings)} (${(0,_environment.settingsShortcutKey)(!1)})`,children:[(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiCog,size:1.5}),this.props.stores.settings.app.automaticUpdates&&(this.props.stores.app.updateStatus===this.props.stores.app.updateStatusTypes.AVAILABLE||this.props.stores.app.updateStatus===this.props.stores.app.updateStatusTypes.DOWNLOADED||this.props.showServicesUpdatedInfoBar)&&(0,_jsxRuntime.jsx)("span",{className:"update-available",children:"â€¢"})]}),this.state.tooltipEnabled&&(0,_jsxRuntime.jsx)(_reactTooltip.default,{place:"right",type:"dark",effect:"solid"})]})}}Sidebar.propTypes={openSettings:_propTypes.default.func.isRequired,closeSettings:_propTypes.default.func.isRequired,setActive:_propTypes.default.func.isRequired,reorder:_propTypes.default.func.isRequired,reload:_propTypes.default.func.isRequired,toggleNotifications:_propTypes.default.func.isRequired,toggleAudio:_propTypes.default.func.isRequired,toggleDarkMode:_propTypes.default.func.isRequired,showServicesUpdatedInfoBar:_propTypes.default.bool.isRequired,showMessageBadgeWhenMutedSetting:_propTypes.default.bool.isRequired,showServiceNameSetting:_propTypes.default.bool.isRequired,showMessageBadgesEvenWhenMuted:_propTypes.default.bool.isRequired,deleteService:_propTypes.default.func.isRequired,updateService:_propTypes.default.func.isRequired,hibernateService:_propTypes.default.func.isRequired,wakeUpService:_propTypes.default.func.isRequired,toggleMuteApp:_propTypes.default.func.isRequired,isAppMuted:_propTypes.default.bool.isRequired,isWorkspaceDrawerOpen:_propTypes.default.bool.isRequired,toggleWorkspaceDrawer:_propTypes.default.func.isRequired,isTodosServiceActive:_propTypes.default.bool.isRequired,stores:_propTypes.default.shape({app:_propTypes.default.instanceOf(_AppStore.default).isRequired,settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired}).isRequired,actions:_propTypes.default.shape({settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired}).isRequired};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(Sidebar)));exports.default=_default;