"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_reactIntl=require("react-intl"),_Form=_interopRequireDefault(require("../../lib/Form")),_validationHelpers=require("../../helpers/validation-helpers"),_Input=_interopRequireDefault(require("../ui/Input")),_Button=_interopRequireDefault(require("../ui/Button")),_Link=_interopRequireDefault(require("../ui/Link")),_Infobox=_interopRequireDefault(require("../ui/Infobox")),_globalMessages=_interopRequireDefault(require("../../i18n/globalMessages")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const messages=(0,_reactIntl.defineMessages)({headline:{id:"password.headline",defaultMessage:[{type:0,value:"Reset password"}]},emailLabel:{id:"password.email.label",defaultMessage:[{type:0,value:"Email address"}]},successInfo:{id:"password.successInfo",defaultMessage:[{type:0,value:"Your new password was sent to your email address"}]},noUser:{id:"password.noUser",defaultMessage:[{type:0,value:"No user with that email address was found"}]},signupLink:{id:"password.link.signup",defaultMessage:[{type:0,value:"Create a free account"}]},loginLink:{id:"password.link.login",defaultMessage:[{type:0,value:"Sign in to your account"}]}});class Password extends _react.Component{constructor(...e){super(...e),this.form=new _Form.default({fields:{email:{label:this.props.intl.formatMessage(messages.emailLabel),value:"",validators:[_validationHelpers.required,_validationHelpers.email]}}},this.props.intl)}submit(e){e.preventDefault(),this.form.submit({onSuccess:e=>{this.props.onSubmit(e.values())},onError:()=>{}})}render(){const{form:e}=this,{intl:s}=this.props,{isSubmitting:t,signupRoute:a,loginRoute:i,status:r}=this.props;return(0,_jsxRuntime.jsxs)("div",{className:"auth__container",children:[(0,_jsxRuntime.jsxs)("form",{className:"franz-form auth__form",onSubmit:e=>this.submit(e),children:[(0,_jsxRuntime.jsx)(_Link.default,{to:"/auth/welcome",children:(0,_jsxRuntime.jsx)("img",{src:"./assets/images/logo.svg",className:"auth__logo",alt:""})}),(0,_jsxRuntime.jsx)("h1",{children:s.formatMessage(messages.headline)}),r.length>0&&r.includes("sent")&&(0,_jsxRuntime.jsx)(_Infobox.default,{type:"success",icon:"checkbox-marked-circle-outline",children:s.formatMessage(messages.successInfo)}),(0,_jsxRuntime.jsx)(_Input.default,{field:e.$("email"),focus:!0}),r.length>0&&r.includes("no-user")&&(0,_jsxRuntime.jsx)("p",{className:"error-message center",children:s.formatMessage(messages.noUser)}),t?(0,_jsxRuntime.jsx)(_Button.default,{className:"auth__button is-loading",buttonType:"secondary",label:`${s.formatMessage(_globalMessages.default.submit)} ...`,loaded:!1,disabled:!0}):(0,_jsxRuntime.jsx)(_Button.default,{type:"submit",className:"auth__button",label:s.formatMessage(_globalMessages.default.submit)})]}),(0,_jsxRuntime.jsxs)("div",{className:"auth__links",children:[(0,_jsxRuntime.jsx)(_Link.default,{to:i,children:s.formatMessage(messages.loginLink)}),(0,_jsxRuntime.jsx)(_Link.default,{to:a,children:s.formatMessage(messages.signupLink)})]})]})}}Password.propTypes={onSubmit:_propTypes.default.func.isRequired,isSubmitting:_propTypes.default.bool.isRequired,signupRoute:_propTypes.default.string.isRequired,loginRoute:_propTypes.default.string.isRequired,status:_mobxReact.PropTypes.arrayOrObservableArray.isRequired};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.observer)(Password));exports.default=_default;