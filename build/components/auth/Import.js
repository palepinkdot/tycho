"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_reactIntl=require("react-intl"),_reactRouter=require("react-router"),_classnames=_interopRequireDefault(require("classnames")),_Form=_interopRequireDefault(require("../../lib/Form")),_Toggle=_interopRequireDefault(require("../ui/Toggle")),_Button=_interopRequireDefault(require("../ui/Button")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const messages=(0,_reactIntl.defineMessages)({headline:{id:"import.headline",defaultMessage:[{type:0,value:"Import your Ferdi 4 services"}]},notSupportedHeadline:{id:"import.notSupportedHeadline",defaultMessage:[{type:0,value:"Services not yet supported in Ferdi 5"}]},submitButtonLabel:{id:"import.submit.label",defaultMessage:[{type:0,value:"Import "},{type:1,value:"count"},{type:0,value:" services"}]},skipButtonLabel:{id:"import.skip.label",defaultMessage:[{type:0,value:"I want to add services manually"}]}});class Import extends _react.Component{componentDidMount(){const e={fields:{import:[...this.props.services.filter((e=>e.recipe)).map((e=>({fields:{add:{default:!0,options:e}}})))]}};this.form=new _Form.default(e,this.props.intl)}submit(e){const{services:t}=this.props;e.preventDefault(),this.form.submit({onSuccess:e=>{const s=e.values().import.map(((e,s)=>!e.add||t.filter((e=>e.recipe))[s])).filter((e=>"boolean"!=typeof e));this.props.onSubmit({services:s})},onError:()=>{}})}render(){const{intl:e}=this.props,{services:t,isSubmitting:s,inviteRoute:i}=this.props,r=t.filter((e=>e.recipe)),a=t.filter((e=>!e.recipe));return(0,_jsxRuntime.jsx)("div",{className:"auth__scroll-container",children:(0,_jsxRuntime.jsx)("div",{className:"auth__container auth__container--signup",children:(0,_jsxRuntime.jsxs)("form",{className:"franz-form auth__form",onSubmit:e=>this.submit(e),children:[(0,_jsxRuntime.jsx)("img",{src:"./assets/images/logo.svg",className:"auth__logo",alt:""}),(0,_jsxRuntime.jsx)("h1",{children:e.formatMessage(messages.headline)}),(0,_jsxRuntime.jsx)("table",{className:"service-table available-services",children:(0,_jsxRuntime.jsx)("tbody",{children:this.form.$("import").map(((e,t)=>(0,_jsxRuntime.jsxs)("tr",{className:"service-table__row",children:[(0,_jsxRuntime.jsx)("td",{className:"service-table__toggle",children:(0,_jsxRuntime.jsx)(_Toggle.default,{field:e.$("add"),showLabel:!1})}),(0,_jsxRuntime.jsx)("td",{className:"service-table__column-icon",children:(0,_jsxRuntime.jsx)("img",{src:r[t].custom_icon||r[t].recipe.icons.svg,className:(0,_classnames.default)({"service-table__icon":!0,"has-custom-icon":r[t].custom_icon}),alt:""})}),(0,_jsxRuntime.jsx)("td",{className:"service-table__column-name",children:""!==r[t].name?r[t].name:r[t].recipe.name})]},e.id)))})}),a.length>0&&(0,_jsxRuntime.jsxs)("div",{className:"unavailable-services",children:[(0,_jsxRuntime.jsx)("strong",{children:e.formatMessage(messages.notSupportedHeadline)}),(0,_jsxRuntime.jsx)("p",{children:t.filter((e=>!e.recipe)).map(((e,t)=>(0,_jsxRuntime.jsxs)("span",{children:[""!==e.name?e.name:e.service,a.length>t+1?", ":""]},e.id)))})]}),s?(0,_jsxRuntime.jsx)(_Button.default,{className:"auth__button is-loading",label:`${e.formatMessage(messages.submitButtonLabel)} ...`,loaded:!1,disabled:!0}):(0,_jsxRuntime.jsx)(_Button.default,{type:"submit",className:"auth__button",label:e.formatMessage(messages.submitButtonLabel)}),(0,_jsxRuntime.jsx)(_reactRouter.Link,{to:i,className:"franz-form__button franz-form__button--secondary auth__button auth__button--skip",children:e.formatMessage(messages.skipButtonLabel)})]})})})}}Import.propTypes={services:_mobxReact.PropTypes.arrayOrObservableArray.isRequired,onSubmit:_propTypes.default.func.isRequired,isSubmitting:_propTypes.default.bool.isRequired,inviteRoute:_propTypes.default.string.isRequired};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.observer)(Import));exports.default=_default;