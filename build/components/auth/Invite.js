"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_reactIntl=require("react-intl"),_reactRouter=require("react-router"),_classnames=_interopRequireDefault(require("classnames")),_Infobox=_interopRequireDefault(require("../ui/Infobox")),_Appear=_interopRequireDefault(require("../ui/effects/Appear")),_Form=_interopRequireDefault(require("../../lib/Form")),_validationHelpers=require("../../helpers/validation-helpers"),_Input=_interopRequireDefault(require("../ui/Input")),_Button=_interopRequireDefault(require("../ui/Button")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const messages=(0,_reactIntl.defineMessages)({settingsHeadline:{id:"settings.invite.headline",defaultMessage:[{type:0,value:"Invite Friends"}]},headline:{id:"invite.headline.friends",defaultMessage:[{type:0,value:"Invite 3 of your friends or colleagues"}]},nameLabel:{id:"invite.name.label",defaultMessage:[{type:0,value:"Name"}]},emailLabel:{id:"invite.email.label",defaultMessage:[{type:0,value:"Email address"}]},submitButtonLabel:{id:"invite.submit.label",defaultMessage:[{type:0,value:"Send invites"}]},skipButtonLabel:{id:"invite.skip.label",defaultMessage:[{type:0,value:"I want to do this later"}]},inviteSuccessInfo:{id:"invite.successInfo",defaultMessage:[{type:0,value:"Invitations sent successfully"}]}});class Invite extends _react.Component{constructor(...e){super(...e),this.state={showSuccessInfo:!1}}componentDidMount(){this.form=new _Form.default({fields:{invite:[...Array.from({length:3}).fill({fields:{name:{label:this.props.intl.formatMessage(messages.nameLabel),placeholder:this.props.intl.formatMessage(messages.nameLabel),onChange:()=>{this.setState({showSuccessInfo:!1})}},email:{label:this.props.intl.formatMessage(messages.emailLabel),placeholder:this.props.intl.formatMessage(messages.emailLabel),onChange:()=>{this.setState({showSuccessInfo:!1})},validators:[_validationHelpers.email]}}})]}},this.props.intl),document.querySelector("input:first-child")?.focus()}submit(e){e.preventDefault(),this.form?.submit({onSuccess:e=>{this.props.onSubmit({invites:e.values().invite}),this.form?.clear(),document.querySelector("input:first-child")?.focus(),this.setState({showSuccessInfo:!0})},onError:()=>{}})}render(){const{form:e}=this,{intl:s}=this.props,{embed:t,isInviteSuccessful:i,isLoadingInvite:a}=this.props,n=e.$("invite").map((e=>e.$("email").value)).some((e=>""!==e.trim())),r=(0,_classnames.default)({auth__button:!0,"invite__embed--button":t}),l=(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[this.state.showSuccessInfo&&i&&(0,_jsxRuntime.jsx)(_Appear.default,{children:(0,_jsxRuntime.jsx)(_Infobox.default,{type:"success",icon:"checkbox-marked-circle-outline",dismissable:!0,children:s.formatMessage(messages.inviteSuccessInfo)})}),(0,_jsxRuntime.jsxs)("form",{className:"franz-form auth__form",onSubmit:e=>this.submit(e),children:[!t&&(0,_jsxRuntime.jsx)("img",{src:"./assets/images/logo.svg",className:"auth__logo",alt:""}),(0,_jsxRuntime.jsx)("h1",{className:t&&"invite__embed",children:s.formatMessage(messages.headline)}),e.$("invite").map((e=>(0,_jsxRuntime.jsx)("div",{className:"grid",children:(0,_jsxRuntime.jsxs)("div",{className:"grid__row",children:[(0,_jsxRuntime.jsx)(_Input.default,{field:e.$("name"),showLabel:!1}),(0,_jsxRuntime.jsx)(_Input.default,{field:e.$("email"),showLabel:!1})]})},e.key))),(0,_jsxRuntime.jsx)(_Button.default,{type:"submit",className:r,disabled:!n,label:s.formatMessage(messages.submitButtonLabel),loaded:!a}),!t&&(0,_jsxRuntime.jsx)(_reactRouter.Link,{to:"/",className:"franz-form__button franz-form__button--secondary auth__button auth__button--skip",children:s.formatMessage(messages.skipButtonLabel)})]})]});return(0,_jsxRuntime.jsxs)("div",{className:t?"settings__main":"auth__container auth__container--signup",children:[t&&(0,_jsxRuntime.jsx)("div",{className:"settings__header",children:(0,_jsxRuntime.jsx)("h1",{children:this.props.intl.formatMessage(messages.settingsHeadline)})}),t?(0,_jsxRuntime.jsx)("div",{className:"settings__body invite__form",children:l}):(0,_jsxRuntime.jsx)("div",{children:l})]})}}Invite.propTypes={onSubmit:_propTypes.default.func.isRequired,embed:_propTypes.default.bool,isInviteSuccessful:_propTypes.default.bool,isLoadingInvite:_propTypes.default.bool},Invite.defaultProps={embed:!1,isInviteSuccessful:!1,isLoadingInvite:!1};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.observer)(Invite));exports.default=_default;