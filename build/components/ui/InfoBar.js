"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_classnames=_interopRequireDefault(require("classnames")),_reactLoader=_interopRequireDefault(require("react-loader")),_reactIntl=require("react-intl"),_js=require("@mdi/js"),_Appear=_interopRequireDefault(require("./effects/Appear")),_icon=require("./icon"),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const messages=(0,_reactIntl.defineMessages)({hide:{id:"infobar.hide",defaultMessage:[{type:0,value:"Hide"}]}});class InfoBar extends _react.Component{render(){const{children:e,type:t,className:a,ctaLabel:r,ctaLoading:s,onClick:i,position:o,sticky:n,onHide:l}=this.props,{intl:p}=this.props;let c="slideUp";return"top"===o&&(c="slideDown"),(0,_jsxRuntime.jsxs)(_Appear.default,{transitionName:c,className:(0,_classnames.default)({"info-bar":!0,[`info-bar--${t}`]:!0,[`info-bar--${o}`]:!0,[`${a}`]:!0}),children:[(0,_jsxRuntime.jsxs)("div",{className:"info-bar__content",children:[e,r&&(0,_jsxRuntime.jsxs)("button",{type:"button",className:"info-bar__cta",onClick:i,children:[(0,_jsxRuntime.jsx)(_reactLoader.default,{loaded:!s,lines:10,scale:.3,color:"#FFF",component:"span"}),r]})]}),!n&&(0,_jsxRuntime.jsx)("button",{type:"button",className:"info-bar__close",onClick:l,"aria-label":p.formatMessage(messages.hide),children:(0,_jsxRuntime.jsx)(_icon.Icon,{icon:_js.mdiClose})})]})}}InfoBar.propTypes={children:_propTypes.default.any.isRequired,onClick:_propTypes.default.func,type:_propTypes.default.string,className:_propTypes.default.string,ctaLabel:_propTypes.default.string,ctaLoading:_propTypes.default.bool,position:_propTypes.default.string,sticky:_propTypes.default.bool,onHide:_propTypes.default.func},InfoBar.defaultProps={onClick:()=>null,type:"primary",className:"",ctaLabel:"",ctaLoading:!1,position:"bottom",sticky:!1,onHide:()=>null};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.observer)(InfoBar));exports.default=_default;