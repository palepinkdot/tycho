"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _class,_descriptor,_class2,_temp,_react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_mobx=require("mobx"),_reactElectronWebView=_interopRequireDefault(require("react-electron-web-view")),_path=require("path"),_Service=_interopRequireDefault(require("../../../models/Service")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _initializerDefineProperty(e,i,r,t){r&&Object.defineProperty(e,i,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(t):void 0})}function _applyDecoratedDescriptor(e,i,r,t,s){var o={};return Object.keys(t).forEach((function(e){o[e]=t[e]})),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0),o=r.slice().reverse().reduce((function(r,t){return t(e,i,r)||r}),o),s&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(s):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(e,i,o),o=null),o}function _initializerWarningHelper(e,i){throw new Error("Decorating class property failed. Please ensure that proposal-class-properties is enabled and runs after the decorators transform.")}const debug=require("debug")("Ferdi:Services");let ServiceWebview=(_temp=_class2=class extends _react.Component{constructor(e){super(e),_initializerDefineProperty(this,"webview",_descriptor,this),this.refocusWebview=()=>{const{webview:e}=this;debug("Refocus Webview is called",this.props.service),e&&(this.props.service.isActive?(e.view.blur(),e.view.focus(),window.setTimeout((()=>{document.title=`Ferdi - ${this.props.service.name} ${this.props.service.dialogTitle?` - ${this.props.service.dialogTitle}`:""} - ${this.props.service._webview.getTitle()}`}),100)):debug("Refocus not required - Not active service"))},(0,_mobx.reaction)((()=>this.webview),(()=>{this.webview&&this.webview.view&&(this.webview.view.addEventListener("console-message",(e=>{debug("Service logged a message:",e.message)})),this.webview.view.addEventListener("did-navigate",(()=>{this.props.service._webview&&(document.title=`Ferdi - ${this.props.service.name} ${this.props.service.dialogTitle?` - ${this.props.service.dialogTitle}`:""} - ${this.props.service._webview.getTitle()}`)})))}))}componentWillUnmount(){const{service:e,detachService:i}=this.props;i({service:e})}render(){const{service:e,setWebviewReference:i,isSpellcheckerEnabled:r}=this.props,t=(0,_path.join)(__dirname,"..","..","..","webview","recipe.js");return(0,_jsxRuntime.jsx)(_reactElectronWebView.default,{ref:e=>{this.webview=e,e&&e.view&&e.view.addEventListener("did-stop-loading",this.refocusWebview)},autosize:!0,src:e.url,preload:t,partition:e.partition,onDidAttach:()=>{i({serviceId:e.id,webview:this.webview.view})},onUpdateTargetUrl:this.updateTargetUrl,useragent:e.userAgent,disablewebsecurity:!!e.recipe.disablewebsecurity||void 0,allowpopups:!0,nodeintegration:!0,webpreferences:`spellcheck=${r?1:0}, contextIsolation=1, nativeWindowOpen=1, enableRemoteModule=1`})}},_class2.propTypes={service:_propTypes.default.instanceOf(_Service.default).isRequired,setWebviewReference:_propTypes.default.func.isRequired,detachService:_propTypes.default.func.isRequired,isSpellcheckerEnabled:_propTypes.default.bool.isRequired},_descriptor=_applyDecoratedDescriptor((_class=_temp).prototype,"webview",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_class);var _default=(0,_mobxReact.observer)(ServiceWebview);exports.default=_default;