"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobx=require("mobx"),_mobxReact=require("mobx-react"),_classnames=_interopRequireDefault(require("classnames")),_Service=_interopRequireDefault(require("../../../models/Service")),_StatusBarTargetUrl=_interopRequireDefault(require("../../ui/StatusBarTargetUrl")),_WebviewLoader=_interopRequireDefault(require("../../ui/WebviewLoader")),_WebviewCrashHandler=_interopRequireDefault(require("./WebviewCrashHandler")),_WebviewErrorHandler=_interopRequireDefault(require("./ErrorHandlers/WebviewErrorHandler")),_ServiceDisabled=_interopRequireDefault(require("./ServiceDisabled")),_ServiceWebview=_interopRequireDefault(require("./ServiceWebview")),_SettingsStore=_interopRequireDefault(require("../../../stores/SettingsStore")),_WebControlsScreen=_interopRequireDefault(require("../../../features/webControls/containers/WebControlsScreen")),_config=require("../../../config"),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class ServiceView extends _react.Component{constructor(...e){super(...e),this.state={forceRepaint:!1,targetUrl:"",statusBarVisible:!1},this.hibernationTimer=null,this.autorunDisposer=null,this.forceRepaintTimeout=null}componentDidMount(){this.autorunDisposer=(0,_mobx.autorun)((()=>{this.props.service.isActive&&(this.setState({forceRepaint:!0}),this.forceRepaintTimeout=setTimeout((()=>{this.setState({forceRepaint:!1})}),100))}))}componentWillUnmount(){this.autorunDisposer(),clearTimeout(this.forceRepaintTimeout),clearTimeout(this.hibernationTimer)}render(){const{detachService:e,service:r,setWebviewReference:i,reload:t,edit:s,enable:a,stores:n,isSpellcheckerEnabled:u}=this.props,{navigationBarBehaviour:o}=n.settings.app,l="always"===o||"custom"===o&&r.recipe.id===_config.CUSTOM_WEBSITE_RECIPE_ID,c=(0,_classnames.default)({services__webview:!0,"services__webview-wrapper":!0,"is-active":r.isActive,"services__webview--force-repaint":this.state.forceRepaint});let d=null;return this.state.statusBarVisible&&(d=(0,_jsxRuntime.jsx)(_StatusBarTargetUrl.default,{text:this.state.targetUrl})),(0,_jsxRuntime.jsxs)("div",{className:c,"data-name":r.name,style:{order:r.order},children:[r.isActive&&r.isEnabled&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[r.hasCrashed&&(0,_jsxRuntime.jsx)(_WebviewCrashHandler.default,{name:r.recipe.name,webview:r.webview,reload:t}),r.isEnabled&&r.isLoading&&r.isFirstLoad&&!r.isHibernating&&!r.isServiceAccessRestricted&&(0,_jsxRuntime.jsx)(_WebviewLoader.default,{loaded:!1,name:r.name}),r.isError&&(0,_jsxRuntime.jsx)(_WebviewErrorHandler.default,{name:r.recipe.name,errorMessage:r.errorMessage,reload:t,edit:s})]}),r.isEnabled?(0,_jsxRuntime.jsx)(_jsxRuntime.Fragment,{children:r.isHibernating?(0,_jsxRuntime.jsxs)("div",{style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",textAlign:"center"},children:[(0,_jsxRuntime.jsx)("span",{role:"img","aria-label":"Sleeping Emoji",style:{fontSize:42},children:"ðŸ˜´"}),(0,_jsxRuntime.jsx)("br",{}),(0,_jsxRuntime.jsx)("br",{}),"This service is currently hibernating.",(0,_jsxRuntime.jsx)("br",{}),"Try switching services or reloading Ferdi."]}):(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[l&&(0,_jsxRuntime.jsx)(_WebControlsScreen.default,{service:r}),(0,_jsxRuntime.jsx)(_ServiceWebview.default,{service:r,setWebviewReference:i,detachService:e,isSpellcheckerEnabled:u})]})}):(0,_jsxRuntime.jsx)(_jsxRuntime.Fragment,{children:r.isActive&&(0,_jsxRuntime.jsx)(_ServiceDisabled.default,{name:r.recipe.name,webview:r.webview,enable:a})}),d]})}}ServiceView.propTypes={service:_propTypes.default.instanceOf(_Service.default).isRequired,setWebviewReference:_propTypes.default.func.isRequired,detachService:_propTypes.default.func.isRequired,reload:_propTypes.default.func.isRequired,edit:_propTypes.default.func.isRequired,enable:_propTypes.default.func.isRequired,isActive:_propTypes.default.bool,stores:_propTypes.default.shape({settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired}).isRequired,isSpellcheckerEnabled:_propTypes.default.bool.isRequired},ServiceView.defaultProps={isActive:!1};var _default=(0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(ServiceView));exports.default=_default;