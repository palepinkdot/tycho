"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_TabBarSortableList=_interopRequireDefault(require("./TabBarSortableList")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class TabBar extends _react.Component{constructor(...e){super(...e),this.onSortEnd=({oldIndex:e,newIndex:r})=>{const{enableToolTip:i,reorder:t}=this.props;i(),t({oldIndex:e,newIndex:r})},this.shouldPreventSorting=e=>"LI"!==e.target.tagName,this.toggleService=({serviceId:e,isEnabled:r})=>{const{updateService:i}=this.props;e&&i({serviceId:e,serviceData:{isEnabled:r},redirect:!1})}}disableService({serviceId:e}){this.toggleService({serviceId:e,isEnabled:!1})}enableService({serviceId:e}){this.toggleService({serviceId:e,isEnabled:!0})}hibernateService({serviceId:e}){e&&this.props.hibernateService({serviceId:e})}wakeUpService({serviceId:e}){e&&this.props.wakeUpService({serviceId:e})}render(){const{services:e,setActive:r,openSettings:i,disableToolTip:t,reload:s,toggleNotifications:o,toggleAudio:a,toggleDarkMode:d,deleteService:p,useVerticalStyle:u,showMessageBadgeWhenMutedSetting:n,showServiceNameSetting:l,showMessageBadgesEvenWhenMuted:c}=this.props,v=u?"x":"y";return(0,_jsxRuntime.jsx)("div",{children:(0,_jsxRuntime.jsx)(_TabBarSortableList.default,{services:e,setActive:r,onSortEnd:this.onSortEnd,onSortStart:t,shouldCancelStart:this.shouldPreventSorting,reload:s,toggleNotifications:o,toggleAudio:a,toggleDarkMode:d,deleteService:p,disableService:e=>this.disableService(e),enableService:e=>this.enableService(e),hibernateService:e=>this.hibernateService(e),wakeUpService:e=>this.wakeUpService(e),openSettings:i,distance:20,axis:v,lockAxis:v,helperClass:"is-reordering",showMessageBadgeWhenMutedSetting:n,showServiceNameSetting:l,showMessageBadgesEvenWhenMuted:c})})}}TabBar.propTypes={services:_mobxReact.PropTypes.arrayOrObservableArray.isRequired,setActive:_propTypes.default.func.isRequired,openSettings:_propTypes.default.func.isRequired,enableToolTip:_propTypes.default.func.isRequired,disableToolTip:_propTypes.default.func.isRequired,reorder:_propTypes.default.func.isRequired,reload:_propTypes.default.func.isRequired,toggleNotifications:_propTypes.default.func.isRequired,toggleAudio:_propTypes.default.func.isRequired,toggleDarkMode:_propTypes.default.func.isRequired,deleteService:_propTypes.default.func.isRequired,updateService:_propTypes.default.func.isRequired,hibernateService:_propTypes.default.func.isRequired,wakeUpService:_propTypes.default.func.isRequired,useVerticalStyle:_propTypes.default.bool.isRequired,showMessageBadgeWhenMutedSetting:_propTypes.default.bool.isRequired,showServiceNameSetting:_propTypes.default.bool.isRequired,showMessageBadgesEvenWhenMuted:_propTypes.default.bool.isRequired};var _default=(0,_mobxReact.observer)(TabBar);exports.default=_default;