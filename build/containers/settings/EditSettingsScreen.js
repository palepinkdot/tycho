"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_reactIntl=require("react-intl"),_AppStore=_interopRequireDefault(require("../../stores/AppStore")),_SettingsStore=_interopRequireDefault(require("../../stores/SettingsStore")),_UserStore=_interopRequireDefault(require("../../stores/UserStore")),_store=_interopRequireDefault(require("../../features/todos/store")),_Form=_interopRequireDefault(require("../../lib/Form")),_languages=require("../../i18n/languages"),_config=require("../../config"),_environment=require("../../environment"),_i18nHelpers=require("../../helpers/i18n-helpers"),_passwordHelpers=require("../../helpers/password-helpers"),_userAgentHelpers=_interopRequireDefault(require("../../helpers/userAgent-helpers")),_EditSettingsForm=_interopRequireDefault(require("../../components/settings/settings/EditSettingsForm")),_ErrorBoundary=_interopRequireDefault(require("../../components/util/ErrorBoundary")),_globalMessages=_interopRequireDefault(require("../../i18n/globalMessages")),_store2=_interopRequireDefault(require("../../features/workspaces/store")),_ServicesStore=_interopRequireDefault(require("../../stores/ServicesStore")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const debug=require("debug")("Ferdi:EditSettingsScreen"),messages=(0,_reactIntl.defineMessages)({autoLaunchOnStart:{id:"settings.app.form.autoLaunchOnStart",defaultMessage:[{type:0,value:"Launch Ferdi on start"}]},autoLaunchInBackground:{id:"settings.app.form.autoLaunchInBackground",defaultMessage:[{type:0,value:"Open in background"}]},runInBackground:{id:"settings.app.form.runInBackground",defaultMessage:[{type:0,value:"Keep Ferdi in background when closing the window"}]},startMinimized:{id:"settings.app.form.startMinimized",defaultMessage:[{type:0,value:"Start minimized"}]},confirmOnQuit:{id:"settings.app.form.confirmOnQuit",defaultMessage:[{type:0,value:"Confirm when quitting Ferdi"}]},enableSystemTray:{id:"settings.app.form.enableSystemTray",defaultMessage:[{type:0,value:"Always show Ferdi in System Tray"}]},enableMenuBar:{id:"settings.app.form.enableMenuBar",defaultMessage:[{type:0,value:"Always show Ferdi in Menu Bar"}]},reloadAfterResume:{id:"settings.app.form.reloadAfterResume",defaultMessage:[{type:0,value:"Reload Ferdi after system resume"}]},minimizeToSystemTray:{id:"settings.app.form.minimizeToSystemTray",defaultMessage:[{type:0,value:"Minimize Ferdi to system tray"}]},closeToSystemTray:{id:"settings.app.form.closeToSystemTray",defaultMessage:[{type:0,value:"Close Ferdi to system tray"}]},privateNotifications:{id:"settings.app.form.privateNotifications",defaultMessage:[{type:0,value:"Don't show message content in notifications"}]},clipboardNotifications:{id:"settings.app.form.clipboardNotifications",defaultMessage:[{type:0,value:"Don't show notifications for clipboard events"}]},notifyTaskBarOnMessage:{id:"settings.app.form.notifyTaskBarOnMessage",defaultMessage:[{type:0,value:"Notify TaskBar/Dock on new message"}]},navigationBarBehaviour:{id:"settings.app.form.navigationBarBehaviour",defaultMessage:[{type:0,value:"Navigation bar behaviour"}]},searchEngine:{id:"settings.app.form.searchEngine",defaultMessage:[{type:0,value:"Search engine"}]},sentry:{id:"settings.app.form.sentry",defaultMessage:[{type:0,value:"Send telemetry data"}]},hibernateOnStartup:{id:"settings.app.form.hibernateOnStartup",defaultMessage:[{type:0,value:"Keep services in hibernation on startup"}]},hibernationStrategy:{id:"settings.app.form.hibernationStrategy",defaultMessage:[{type:0,value:"Hibernation strategy"}]},wakeUpStrategy:{id:"settings.app.form.wakeUpStrategy",defaultMessage:[{type:0,value:"Wake up strategy"}]},wakeUpHibernationStrategy:{id:"settings.app.form.wakeUpHibernationStrategy",defaultMessage:[{type:0,value:"Hibernation strategy after automatic wake up"}]},wakeUpHibernationSplay:{id:"settings.app.form.wakeUpHibernationSplay",defaultMessage:[{type:0,value:"Splay hibernate/wake cycles to reduce load"}]},predefinedTodoServer:{id:"settings.app.form.predefinedTodoServer",defaultMessage:[{type:0,value:"Todo Server"}]},customTodoServer:{id:"settings.app.form.customTodoServer",defaultMessage:[{type:0,value:"Custom Todo Server"}]},enableLock:{id:"settings.app.form.enableLock",defaultMessage:[{type:0,value:"Enable Password Lock"}]},lockPassword:{id:"settings.app.form.lockPassword",defaultMessage:[{type:0,value:"Password"}]},useTouchIdToUnlock:{id:"settings.app.form.useTouchIdToUnlock",defaultMessage:[{type:0,value:"Allow using TouchID to unlock Ferdi"}]},inactivityLock:{id:"settings.app.form.inactivityLock",defaultMessage:[{type:0,value:"Lock after inactivity"}]},scheduledDNDEnabled:{id:"settings.app.form.scheduledDNDEnabled",defaultMessage:[{type:0,value:"Enable scheduled Do-not-Disturb"}]},scheduledDNDStart:{id:"settings.app.form.scheduledDNDStart",defaultMessage:[{type:0,value:"From"}]},scheduledDNDEnd:{id:"settings.app.form.scheduledDNDEnd",defaultMessage:[{type:0,value:"To"}]},language:{id:"settings.app.form.language",defaultMessage:[{type:0,value:"Language"}]},darkMode:{id:"settings.app.form.darkMode",defaultMessage:[{type:0,value:"Enable Dark Mode"}]},adaptableDarkMode:{id:"settings.app.form.adaptableDarkMode",defaultMessage:[{type:0,value:"Synchronize dark mode with my OS's dark mode setting"}]},universalDarkMode:{id:"settings.app.form.universalDarkMode",defaultMessage:[{type:0,value:"Enable universal Dark Mode"}]},splitMode:{id:"settings.app.form.splitMode",defaultMessage:[{type:0,value:"Enable Split View Mode"}]},splitColumns:{id:"settings.app.form.splitColumns",defaultMessage:[{type:0,value:"Number of columns"}]},serviceRibbonWidth:{id:"settings.app.form.serviceRibbonWidth",defaultMessage:[{type:0,value:"Sidebar width"}]},iconSize:{id:"settings.app.form.iconSize",defaultMessage:[{type:0,value:"Service icon size"}]},enableLongPressServiceHint:{id:"settings.app.form.enableLongPressServiceHint",defaultMessage:[{type:0,value:"Enable service shortcut hint on long press"}]},useVerticalStyle:{id:"settings.app.form.useVerticalStyle",defaultMessage:[{type:0,value:"Use horizontal style"}]},alwaysShowWorkspaces:{id:"settings.app.form.alwaysShowWorkspaces",defaultMessage:[{type:0,value:"Always show workspace drawer"}]},accentColor:{id:"settings.app.form.accentColor",defaultMessage:[{type:0,value:"Accent color"}]},showDisabledServices:{id:"settings.app.form.showDisabledServices",defaultMessage:[{type:0,value:"Display disabled services tabs"}]},showServiceName:{id:"settings.app.form.showServiceName",defaultMessage:[{type:0,value:"Display service name under the icon"}]},showMessageBadgeWhenMuted:{id:"settings.app.form.showMessagesBadgesWhenMuted",defaultMessage:[{type:0,value:"Show unread message badge when notifications are disabled"}]},showDragArea:{id:"settings.app.form.showDragArea",defaultMessage:[{type:0,value:"Show draggable area on window"}]},enableSpellchecking:{id:"settings.app.form.enableSpellchecking",defaultMessage:[{type:0,value:"Enable spell checking"}]},enableGPUAcceleration:{id:"settings.app.form.enableGPUAcceleration",defaultMessage:[{type:0,value:"Enable GPU Acceleration"}]},enableGlobalHideShortcut:{id:"settings.app.form.enableGlobalHideShortcut",defaultMessage:[{type:0,value:"Enable Global shortcut to hide Ferdi"}]},beta:{id:"settings.app.form.beta",defaultMessage:[{type:0,value:"Include pre-releases"}]},automaticUpdates:{id:"settings.app.form.automaticUpdates",defaultMessage:[{type:0,value:"Enable updates"}]},enableTodos:{id:"settings.app.form.enableTodos",defaultMessage:[{type:0,value:"Enable Ferdi Todos"}]},keepAllWorkspacesLoaded:{id:"settings.app.form.keepAllWorkspacesLoaded",defaultMessage:[{type:0,value:"Keep all workspaces loaded"}]}});class EditSettingsScreen extends _react.Component{constructor(e){super(e),this.state={lockedPassword:""}}onSubmit(e){const{todos:a,workspaces:s}=this.props.stores,{app:t,settings:o,user:l,todos:r,workspaces:i}=this.props.actions;this.setState({lockedPassword:e.lockedPassword}),t.launchOnStartup({enable:Boolean(e.autoLaunchOnStart),openInBackground:Boolean(e.autoLaunchInBackground)}),debug(`Updating settings store with data: ${e}`),o.update({type:"app",data:{runInBackground:Boolean(e.runInBackground),enableSystemTray:Boolean(e.enableSystemTray),reloadAfterResume:Boolean(e.reloadAfterResume),startMinimized:Boolean(e.startMinimized),confirmOnQuit:Boolean(e.confirmOnQuit),minimizeToSystemTray:Boolean(e.minimizeToSystemTray),closeToSystemTray:Boolean(e.closeToSystemTray),privateNotifications:Boolean(e.privateNotifications),clipboardNotifications:Boolean(e.clipboardNotifications),notifyTaskBarOnMessage:Boolean(e.notifyTaskBarOnMessage),navigationBarBehaviour:e.navigationBarBehaviour,searchEngine:e.searchEngine,sentry:Boolean(e.sentry),hibernateOnStartup:Boolean(e.hibernateOnStartup),hibernationStrategy:Number(e.hibernationStrategy),wakeUpStrategy:Number(e.wakeUpStrategy),wakeUpHibernationStrategy:Number(e.wakeUpHibernationStrategy),wakeUpHibernationSplay:Boolean(e.wakeUpHibernationSplay),predefinedTodoServer:e.predefinedTodoServer,customTodoServer:e.customTodoServer,lockingFeatureEnabled:Boolean(e.lockingFeatureEnabled),lockedPassword:(0,_passwordHelpers.hash)(String(e.lockedPassword)),useTouchIdToUnlock:Boolean(e.useTouchIdToUnlock),inactivityLock:Number(e.inactivityLock),scheduledDNDEnabled:Boolean(e.scheduledDNDEnabled),scheduledDNDStart:e.scheduledDNDStart,scheduledDNDEnd:e.scheduledDNDEnd,enableGPUAcceleration:Boolean(e.enableGPUAcceleration),enableGlobalHideShortcut:Boolean(e.enableGlobalHideShortcut),showDisabledServices:Boolean(e.showDisabledServices),showServiceName:Boolean(e.showServiceName),darkMode:Boolean(e.darkMode),adaptableDarkMode:Boolean(e.adaptableDarkMode),universalDarkMode:Boolean(e.universalDarkMode),splitMode:Boolean(e.splitMode),splitColumns:Number(e.splitColumns),serviceRibbonWidth:Number(e.serviceRibbonWidth),iconSize:Number(e.iconSize),enableLongPressServiceHint:Boolean(e.enableLongPressServiceHint),useVerticalStyle:Boolean(e.useVerticalStyle),alwaysShowWorkspaces:Boolean(e.alwaysShowWorkspaces),accentColor:e.accentColor,showMessageBadgeWhenMuted:Boolean(e.showMessageBadgeWhenMuted),showDragArea:Boolean(e.showDragArea),enableSpellchecking:Boolean(e.enableSpellchecking),spellcheckerLanguage:e.spellcheckerLanguage,userAgentPref:e.userAgentPref,beta:Boolean(e.beta),automaticUpdates:Boolean(e.automaticUpdates),locale:e.locale}}),l.update({userData:{automaticUpdates:Boolean(e.automaticUpdates),beta:Boolean(e.beta),locale:e.locale}});const{keepAllWorkspacesLoaded:n}=s.settings;if(Boolean(n)!==Boolean(e.keepAllWorkspacesLoaded)&&i.toggleKeepAllWorkspacesLoadedSetting(),a.isFeatureActive){const{isFeatureEnabledByUser:s}=a.settings;Boolean(s)!==Boolean(e.enableTodos)&&r.toggleTodosFeatureVisibility()}}prepareForm(){const{app:e,settings:a,user:s,todos:t,workspaces:o}=this.props.stores,{intl:l}=this.props,{lockedPassword:r}=this.state,i=(0,_i18nHelpers.getSelectOptions)({locales:_languages.APP_LOCALES}),n=(0,_i18nHelpers.getSelectOptions)({locales:_config.NAVIGATION_BAR_BEHAVIOURS,sort:!1}),d=(0,_i18nHelpers.getSelectOptions)({locales:_config.SEARCH_ENGINE_NAMES,sort:!1}),p=(0,_i18nHelpers.getSelectOptions)({locales:_config.HIBERNATION_STRATEGIES,sort:!1}),u=(0,_i18nHelpers.getSelectOptions)({locales:_config.WAKE_UP_STRATEGIES,sort:!1}),c=(0,_i18nHelpers.getSelectOptions)({locales:_config.WAKE_UP_HIBERNATION_STRATEGIES,sort:!1}),g=(0,_i18nHelpers.getSelectOptions)({locales:_config.TODO_APPS,sort:!1}),f=(0,_i18nHelpers.getSelectOptions)({locales:_config.SIDEBAR_WIDTH,sort:!1}),S=(0,_i18nHelpers.getSelectOptions)({locales:_config.ICON_SIZES,sort:!1}),m=(0,_i18nHelpers.getSelectOptions)({locales:_languages.SPELLCHECKER_LOCALES,automaticDetectionText:l.formatMessage(_globalMessages.default.spellcheckerAutomaticDetection)}),T={fields:{autoLaunchOnStart:{label:l.formatMessage(messages.autoLaunchOnStart),value:e.autoLaunchOnStart,default:_config.DEFAULT_APP_SETTINGS.autoLaunchOnStart},autoLaunchInBackground:{label:l.formatMessage(messages.autoLaunchInBackground),value:e.launchInBackground,default:_config.DEFAULT_APP_SETTINGS.autoLaunchInBackground},runInBackground:{label:l.formatMessage(messages.runInBackground),value:a.all.app.runInBackground,default:_config.DEFAULT_APP_SETTINGS.runInBackground},startMinimized:{label:l.formatMessage(messages.startMinimized),value:a.all.app.startMinimized,default:_config.DEFAULT_APP_SETTINGS.startMinimized},confirmOnQuit:{label:l.formatMessage(messages.confirmOnQuit),value:a.all.app.confirmOnQuit,default:_config.DEFAULT_APP_SETTINGS.confirmOnQuit},enableSystemTray:{label:l.formatMessage(_environment.isMac?messages.enableMenuBar:messages.enableSystemTray),value:a.all.app.enableSystemTray,default:_config.DEFAULT_APP_SETTINGS.enableSystemTray},reloadAfterResume:{label:l.formatMessage(messages.reloadAfterResume),value:a.all.app.reloadAfterResume,default:_config.DEFAULT_APP_SETTINGS.reloadAfterResume},minimizeToSystemTray:{label:l.formatMessage(messages.minimizeToSystemTray),value:a.all.app.minimizeToSystemTray,default:_config.DEFAULT_APP_SETTINGS.minimizeToSystemTray},closeToSystemTray:{label:l.formatMessage(messages.closeToSystemTray),value:a.all.app.closeToSystemTray,default:_config.DEFAULT_APP_SETTINGS.closeToSystemTray},privateNotifications:{label:l.formatMessage(messages.privateNotifications),value:a.all.app.privateNotifications,default:_config.DEFAULT_APP_SETTINGS.privateNotifications},clipboardNotifications:{label:l.formatMessage(messages.clipboardNotifications),value:a.all.app.clipboardNotifications,default:_config.DEFAULT_APP_SETTINGS.clipboardNotifications},notifyTaskBarOnMessage:{label:l.formatMessage(messages.notifyTaskBarOnMessage),value:a.all.app.notifyTaskBarOnMessage,default:_config.DEFAULT_APP_SETTINGS.notifyTaskBarOnMessage},navigationBarBehaviour:{label:l.formatMessage(messages.navigationBarBehaviour),value:a.all.app.navigationBarBehaviour,default:_config.DEFAULT_APP_SETTINGS.navigationBarBehaviour,options:n},searchEngine:{label:l.formatMessage(messages.searchEngine),value:a.all.app.searchEngine,default:_config.DEFAULT_APP_SETTINGS.searchEngine,options:d},sentry:{label:l.formatMessage(messages.sentry),value:a.all.app.sentry,default:_config.DEFAULT_APP_SETTINGS.sentry},hibernateOnStartup:{label:l.formatMessage(messages.hibernateOnStartup),value:a.all.app.hibernateOnStartup,default:_config.DEFAULT_APP_SETTINGS.hibernateOnStartup},hibernationStrategy:{label:l.formatMessage(messages.hibernationStrategy),value:a.all.app.hibernationStrategy,options:p,default:_config.DEFAULT_APP_SETTINGS.hibernationStrategy},wakeUpStrategy:{label:l.formatMessage(messages.wakeUpStrategy),value:a.all.app.wakeUpStrategy,options:u,default:_config.DEFAULT_APP_SETTINGS.wakeUpStrategy},wakeUpHibernationStrategy:{label:l.formatMessage(messages.wakeUpHibernationStrategy),value:a.all.app.wakeUpHibernationStrategy,options:c,default:_config.DEFAULT_APP_SETTINGS.wakeUpHibernationStrategy},wakeUpHibernationSplay:{label:l.formatMessage(messages.wakeUpHibernationSplay),value:a.all.app.wakeUpHibernationSplay,default:_config.DEFAULT_APP_SETTINGS.wakeUpHibernationSplay},predefinedTodoServer:{label:l.formatMessage(messages.predefinedTodoServer),value:a.all.app.predefinedTodoServer,default:_config.DEFAULT_APP_SETTINGS.predefinedTodoServer,options:g},customTodoServer:{label:l.formatMessage(messages.customTodoServer),value:a.all.app.customTodoServer,default:_config.DEFAULT_APP_SETTINGS.customTodoServer},lockingFeatureEnabled:{label:l.formatMessage(messages.enableLock),value:a.all.app.lockingFeatureEnabled||!1,default:_config.DEFAULT_APP_SETTINGS.lockingFeatureEnabled},lockedPassword:{label:l.formatMessage(messages.lockPassword),value:r,default:"",type:"password"},useTouchIdToUnlock:{label:l.formatMessage(messages.useTouchIdToUnlock),value:a.all.app.useTouchIdToUnlock,default:_config.DEFAULT_APP_SETTINGS.useTouchIdToUnlock},inactivityLock:{label:l.formatMessage(messages.inactivityLock),value:a.all.app.inactivityLock,default:0,type:"number"},scheduledDNDEnabled:{label:l.formatMessage(messages.scheduledDNDEnabled),value:a.all.app.scheduledDNDEnabled||!1,default:_config.DEFAULT_APP_SETTINGS.scheduledDNDEnabled},scheduledDNDStart:{label:l.formatMessage(messages.scheduledDNDStart),value:a.all.app.scheduledDNDStart,default:"17:00",type:"time"},scheduledDNDEnd:{label:l.formatMessage(messages.scheduledDNDEnd),value:a.all.app.scheduledDNDEnd,default:"09:00",type:"time"},showDisabledServices:{label:l.formatMessage(messages.showDisabledServices),value:a.all.app.showDisabledServices,default:_config.DEFAULT_APP_SETTINGS.showDisabledServices},showServiceName:{label:l.formatMessage(messages.showServiceName),value:a.all.app.showServiceName,default:_config.DEFAULT_APP_SETTINGS.showServiceName},showMessageBadgeWhenMuted:{label:l.formatMessage(messages.showMessageBadgeWhenMuted),value:a.all.app.showMessageBadgeWhenMuted,default:_config.DEFAULT_APP_SETTINGS.showMessageBadgeWhenMuted},showDragArea:{label:l.formatMessage(messages.showDragArea),value:a.all.app.showDragArea,default:_config.DEFAULT_APP_SETTINGS.showDragArea},enableSpellchecking:{label:l.formatMessage(messages.enableSpellchecking),value:a.all.app.enableSpellchecking,default:_config.DEFAULT_APP_SETTINGS.enableSpellchecking},spellcheckerLanguage:{label:l.formatMessage(_globalMessages.default.spellcheckerLanguage),value:a.all.app.spellcheckerLanguage,options:m,default:_config.DEFAULT_APP_SETTINGS.spellcheckerLanguage},userAgentPref:{label:l.formatMessage(_globalMessages.default.userAgentPref),value:a.all.app.userAgentPref,default:_config.DEFAULT_APP_SETTINGS.userAgentPref,placeholder:(0,_userAgentHelpers.default)()},darkMode:{label:l.formatMessage(messages.darkMode),value:a.all.app.darkMode,default:_config.DEFAULT_APP_SETTINGS.darkMode},adaptableDarkMode:{label:l.formatMessage(messages.adaptableDarkMode),value:a.all.app.adaptableDarkMode,default:_config.DEFAULT_APP_SETTINGS.adaptableDarkMode},universalDarkMode:{label:l.formatMessage(messages.universalDarkMode),value:a.all.app.universalDarkMode,default:_config.DEFAULT_APP_SETTINGS.universalDarkMode},splitMode:{label:l.formatMessage(messages.splitMode),value:a.all.app.splitMode,default:_config.DEFAULT_APP_SETTINGS.splitMode},splitColumns:{label:`${l.formatMessage(messages.splitColumns)} (${_config.SPLIT_COLUMNS_MIN}-${_config.SPLIT_COLUMNS_MAX})`,value:a.all.app.splitColumns,default:_config.DEFAULT_APP_SETTINGS.splitColumns},serviceRibbonWidth:{label:l.formatMessage(messages.serviceRibbonWidth),value:a.all.app.serviceRibbonWidth,default:_config.DEFAULT_APP_SETTINGS.serviceRibbonWidth,options:f},iconSize:{label:l.formatMessage(messages.iconSize),value:a.all.app.iconSize,default:_config.DEFAULT_APP_SETTINGS.iconSize,options:S},enableLongPressServiceHint:{label:l.formatMessage(messages.enableLongPressServiceHint),value:a.all.app.enableLongPressServiceHint,default:_config.DEFAULT_APP_SETTINGS.enableLongPressServiceHint},useVerticalStyle:{label:l.formatMessage(messages.useVerticalStyle),value:a.all.app.useVerticalStyle,default:_config.DEFAULT_APP_SETTINGS.useVerticalStyle},alwaysShowWorkspaces:{label:l.formatMessage(messages.alwaysShowWorkspaces),value:a.all.app.alwaysShowWorkspaces,default:_config.DEFAULT_APP_SETTINGS.alwaysShowWorkspaces},accentColor:{label:l.formatMessage(messages.accentColor),value:a.all.app.accentColor,default:_config.DEFAULT_APP_SETTINGS.accentColor},enableGPUAcceleration:{label:l.formatMessage(messages.enableGPUAcceleration),value:a.all.app.enableGPUAcceleration,default:_config.DEFAULT_APP_SETTINGS.enableGPUAcceleration},enableGlobalHideShortcut:{label:l.formatMessage(messages.enableGlobalHideShortcut),value:a.all.app.enableGlobalHideShortcut,default:_config.DEFAULT_APP_SETTINGS.enableGlobalHideShortcut},locale:{label:l.formatMessage(messages.language),value:e.locale,options:i,default:_config.DEFAULT_APP_SETTINGS.locale},beta:{label:l.formatMessage(messages.beta),value:s.data.beta,default:_config.DEFAULT_APP_SETTINGS.beta},automaticUpdates:{label:l.formatMessage(messages.automaticUpdates),value:a.app.automaticUpdates,default:_config.DEFAULT_APP_SETTINGS.automaticUpdates}}};return o.isFeatureActive&&(T.fields.keepAllWorkspacesLoaded={label:l.formatMessage(messages.keepAllWorkspacesLoaded),value:o.settings.keepAllWorkspacesLoaded,default:_config.DEFAULT_SETTING_KEEP_ALL_WORKSPACES_LOADED}),t.isFeatureActive&&(T.fields.enableTodos={label:l.formatMessage(messages.enableTodos),value:t.settings.isFeatureEnabledByUser,default:_config.DEFAULT_IS_FEATURE_ENABLED_BY_USER}),new _Form.default(T)}render(){const{app:e,services:a}=this.props.stores,{updateStatus:s,updateStatusTypes:t,isClearingAllCache:o,lockingFeatureEnabled:l}=e,{checkForUpdates:r,installUpdate:i,clearAllCache:n}=this.props.actions.app,d=this.prepareForm();return(0,_jsxRuntime.jsx)(_ErrorBoundary.default,{children:(0,_jsxRuntime.jsx)(_EditSettingsForm.default,{form:d,checkForUpdates:r,installUpdate:i,isCheckingForUpdates:s===t.CHECKING,isUpdateAvailable:s===t.AVAILABLE,noUpdateAvailable:s===t.NOT_AVAILABLE,updateIsReadyToInstall:s===t.DOWNLOADED,updateFailed:s===t.FAILED,showServicesUpdatedInfoBar:this.props.stores.ui.showServicesUpdatedInfoBar,onSubmit:e=>this.onSubmit(e),getCacheSize:()=>e.cacheSize,isClearingAllCache:o,onClearAllCache:n,lockingFeatureEnabled:l,automaticUpdates:this.props.stores.settings.app.automaticUpdates,isDarkmodeEnabled:this.props.stores.settings.app.darkMode,isAdaptableDarkModeEnabled:this.props.stores.settings.app.adaptableDarkMode,isSplitModeEnabled:this.props.stores.settings.app.splitMode,isTodosActivated:this.props.stores.todos.isFeatureEnabledByUser,isUsingCustomTodoService:this.props.stores.todos.isUsingCustomTodoService,hasAddedTodosAsService:a.isTodosServiceAdded,isOnline:e.isOnline})})}}EditSettingsScreen.propTypes={stores:_propTypes.default.shape({app:_propTypes.default.instanceOf(_AppStore.default).isRequired,user:_propTypes.default.instanceOf(_UserStore.default).isRequired,settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired,services:_propTypes.default.instanceOf(_ServicesStore.default).isRequired,todos:_propTypes.default.instanceOf(_store.default).isRequired,workspaces:_propTypes.default.instanceOf(_store2.default).isRequired}).isRequired,actions:_propTypes.default.shape({app:_propTypes.default.instanceOf(_AppStore.default).isRequired,user:_propTypes.default.instanceOf(_UserStore.default).isRequired,settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired,todos:_propTypes.default.instanceOf(_store.default).isRequired,workspaces:_propTypes.default.instanceOf(_store2.default).isRequired}).isRequired};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(EditSettingsScreen)));exports.default=_default;