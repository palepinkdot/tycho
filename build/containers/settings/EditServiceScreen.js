"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_reactIntl=require("react-intl"),_mobxReactRouter=require("mobx-react-router"),_UserStore=_interopRequireDefault(require("../../stores/UserStore")),_RecipesStore=_interopRequireDefault(require("../../stores/RecipesStore")),_ServicesStore=_interopRequireDefault(require("../../stores/ServicesStore")),_SettingsStore=_interopRequireDefault(require("../../stores/SettingsStore")),_Form=_interopRequireDefault(require("../../lib/Form")),_ServiceError=_interopRequireDefault(require("../../components/settings/services/ServiceError")),_EditServiceForm=_interopRequireDefault(require("../../components/settings/services/EditServiceForm")),_ErrorBoundary=_interopRequireDefault(require("../../components/util/ErrorBoundary")),_validationHelpers=require("../../helpers/validation-helpers"),_i18nHelpers=require("../../helpers/i18n-helpers"),_serviceProxy=require("../../features/serviceProxy"),_languages=require("../../i18n/languages"),_globalMessages=_interopRequireDefault(require("../../i18n/globalMessages")),_config=require("../../config"),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const messages=(0,_reactIntl.defineMessages)({name:{id:"settings.service.form.name",defaultMessage:[{type:0,value:"Name"}]},enableService:{id:"settings.service.form.enableService",defaultMessage:[{type:0,value:"Enable service"}]},enableHibernation:{id:"settings.service.form.enableHibernation",defaultMessage:[{type:0,value:"Enable hibernation"}]},enableWakeUp:{id:"settings.service.form.enableWakeUp",defaultMessage:[{type:0,value:"Enable wake up"}]},enableNotification:{id:"settings.service.form.enableNotification",defaultMessage:[{type:0,value:"Enable notifications"}]},enableBadge:{id:"settings.service.form.enableBadge",defaultMessage:[{type:0,value:"Show unread message badges"}]},enableAudio:{id:"settings.service.form.enableAudio",defaultMessage:[{type:0,value:"Enable audio"}]},team:{id:"settings.service.form.team",defaultMessage:[{type:0,value:"Team"}]},customUrl:{id:"settings.service.form.customUrl",defaultMessage:[{type:0,value:"Custom server"}]},indirectMessages:{id:"settings.service.form.indirectMessages",defaultMessage:[{type:0,value:"Show message badge for all new messages"}]},icon:{id:"settings.service.form.icon",defaultMessage:[{type:0,value:"Custom icon"}]},enableDarkMode:{id:"settings.service.form.enableDarkMode",defaultMessage:[{type:0,value:"Enable Dark Mode"}]},darkReaderBrightness:{id:"settings.service.form.darkReaderBrightness",defaultMessage:[{type:0,value:"Dark Reader Brightness"}]},darkReaderContrast:{id:"settings.service.form.darkReaderContrast",defaultMessage:[{type:0,value:"Dark Reader Contrast"}]},darkReaderSepia:{id:"settings.service.form.darkReaderSepia",defaultMessage:[{type:0,value:"Dark Reader Sepia"}]},onlyShowFavoritesInUnreadCount:{id:"settings.service.form.onlyShowFavoritesInUnreadCount",defaultMessage:[{type:0,value:"Only show Favorites in unread count"}]},enableProxy:{id:"settings.service.form.proxy.isEnabled",defaultMessage:[{type:0,value:"Use Proxy"}]},proxyHost:{id:"settings.service.form.proxy.host",defaultMessage:[{type:0,value:"Proxy Host/IP"}]},proxyPort:{id:"settings.service.form.proxy.port",defaultMessage:[{type:0,value:"Port"}]},proxyUser:{id:"settings.service.form.proxy.user",defaultMessage:[{type:0,value:"User (optional)"}]},proxyPassword:{id:"settings.service.form.proxy.password",defaultMessage:[{type:0,value:"Password (optional)"}]}});class EditServiceScreen extends _react.Component{onSubmit(e){const{action:s}=this.props.router.params,{recipes:a,services:t}=this.props.stores,{createService:r,updateService:i}=this.props.actions.service;e.darkReaderSettings={brightness:e.darkReaderBrightness,contrast:e.darkReaderContrast,sepia:e.darkReaderSepia},delete e.darkReaderContrast,delete e.darkReaderBrightness,delete e.darkReaderSepia;const o=e;o.isMuted=!o.isMuted,"edit"===s?i({serviceId:t.activeSettings.id,serviceData:o}):r({recipeId:a.active.id,serviceData:o})}prepareForm(e,s,a){const{intl:t}=this.props,{stores:r,router:i}=this.props,{action:o}=i.params;let l=_languages.SPELLCHECKER_LOCALES[r.settings.app.spellcheckerLanguage];"automatic"===r.settings.app.spellcheckerLanguage&&(l=t.formatMessage(_globalMessages.default.spellcheckerAutomaticDetectionShort));const n=(0,_i18nHelpers.getSelectOptions)({locales:_languages.SPELLCHECKER_LOCALES,resetToDefaultText:t.formatMessage(_globalMessages.default.spellcheckerSystemDefault,{default:l}),automaticDetectionText:"automatic"!==r.settings.app.spellcheckerLanguage?t.formatMessage(_globalMessages.default.spellcheckerAutomaticDetection):""}),d={fields:{name:{label:t.formatMessage(messages.name),placeholder:t.formatMessage(messages.name),value:s.id?s.name:e.name},isEnabled:{label:t.formatMessage(messages.enableService),value:s.isEnabled,default:_config.DEFAULT_SERVICE_SETTINGS.isEnabled},isHibernationEnabled:{label:t.formatMessage(messages.enableHibernation),value:"edit"!==o?e.autoHibernate:s.isHibernationEnabled,default:_config.DEFAULT_SERVICE_SETTINGS.isHibernationEnabled},isWakeUpEnabled:{label:t.formatMessage(messages.enableWakeUp),value:s.isWakeUpEnabled,default:_config.DEFAULT_SERVICE_SETTINGS.isWakeUpEnabled},isNotificationEnabled:{label:t.formatMessage(messages.enableNotification),value:s.isNotificationEnabled,default:_config.DEFAULT_SERVICE_SETTINGS.isNotificationEnabled},isBadgeEnabled:{label:t.formatMessage(messages.enableBadge),value:s.isBadgeEnabled,default:_config.DEFAULT_SERVICE_SETTINGS.isBadgeEnabled},isMuted:{label:t.formatMessage(messages.enableAudio),value:!s.isMuted,default:_config.DEFAULT_SERVICE_SETTINGS.isMuted},customIcon:{label:t.formatMessage(messages.icon),value:!!s.hasCustomUploadedIcon&&s.icon,default:null,type:"file"},isDarkModeEnabled:{label:t.formatMessage(messages.enableDarkMode),value:s.isDarkModeEnabled,default:r.settings.app.darkMode},darkReaderBrightness:{label:t.formatMessage(messages.darkReaderBrightness),value:s.darkReaderSettings?s.darkReaderSettings.brightness:void 0,default:100},darkReaderContrast:{label:t.formatMessage(messages.darkReaderContrast),value:s.darkReaderSettings?s.darkReaderSettings.contrast:void 0,default:90},darkReaderSepia:{label:t.formatMessage(messages.darkReaderSepia),value:s.darkReaderSettings?s.darkReaderSettings.sepia:void 0,default:10},spellcheckerLanguage:{label:t.formatMessage(_globalMessages.default.spellcheckerLanguage),value:s.spellcheckerLanguage,options:n,disabled:!r.settings.app.enableSpellchecking},userAgentPref:{label:t.formatMessage(_globalMessages.default.userAgentPref),placeholder:s.defaultUserAgent,value:s.userAgentPref?s.userAgentPref:""}}};if(e.hasTeamId&&Object.assign(d.fields,{team:{label:t.formatMessage(messages.team),placeholder:t.formatMessage(messages.team),value:s.team,validators:[_validationHelpers.required]}}),e.hasCustomUrl&&Object.assign(d.fields,{customUrl:{label:t.formatMessage(messages.customUrl),placeholder:"'http://' or 'https://' or 'file:///'",value:s.customUrl||e.serviceURL,validators:[_validationHelpers.required,_validationHelpers.url]}}),e.hasTeamId&&e.hasCustomUrl&&(d.fields.team.validators=[(0,_validationHelpers.oneRequired)(["team","customUrl"])],d.fields.customUrl.validators=[_validationHelpers.url,(0,_validationHelpers.oneRequired)(["team","customUrl"])]),e.hasHostedOption&&(e.hasTeamId||e.hasCustomUrl)&&(d.fields.team&&(d.fields.team.validators=[]),d.fields.customUrl&&(d.fields.customUrl.validators=[_validationHelpers.url])),e.hasIndirectMessages&&Object.assign(d.fields,{isIndirectMessageBadgeEnabled:{label:t.formatMessage(messages.indirectMessages),value:s.isIndirectMessageBadgeEnabled,default:_config.DEFAULT_SERVICE_SETTINGS.hasIndirectMessages}}),e.allowFavoritesDelineationInUnreadCount&&Object.assign(d.fields,{onlyShowFavoritesInUnreadCount:{label:t.formatMessage(messages.onlyShowFavoritesInUnreadCount),value:s.onlyShowFavoritesInUnreadCount,default:_config.DEFAULT_APP_SETTINGS.onlyShowFavoritesInUnreadCount}}),a.isEnabled){const e=r.settings.proxy[s.id]||{};Object.assign(d.fields,{proxy:{name:"proxy",label:"proxy",fields:{isEnabled:{label:t.formatMessage(messages.enableProxy),value:e.isEnabled,default:_config.DEFAULT_APP_SETTINGS.proxyFeatureEnabled},host:{label:t.formatMessage(messages.proxyHost),value:e.host,default:""},port:{label:t.formatMessage(messages.proxyPort),value:e.port,default:""},user:{label:t.formatMessage(messages.proxyUser),value:e.user,default:""},password:{label:t.formatMessage(messages.proxyPassword),value:e.password,default:"",type:"password"}}}})}return new _Form.default(d)}deleteService(){const{deleteService:e}=this.props.actions.service,{action:s}=this.props.router.params;if("edit"===s){const{activeSettings:s}=this.props.stores.services;e({serviceId:s.id,redirect:"/settings/services"})}}openRecipeFile(e){const{openRecipeFile:s}=this.props.actions.service,{action:a}=this.props.router.params;if("edit"===a){const{activeSettings:a}=this.props.stores.services;s({recipe:a.recipe.id,file:e})}}render(){const{recipes:e,services:s,user:a}=this.props.stores,{action:t}=this.props.router.params;let r,i={},o=!1;if("add"===t){if(r=e.active,!r)return(0,_jsxRuntime.jsx)(_ServiceError.default,{})}else i=s.activeSettings,o=s.allServicesRequest.isExecuting,!o&&i&&(r=i.recipe);if(o)return(0,_jsxRuntime.jsx)("div",{children:"Loading..."});if(!r)return(0,_jsxRuntime.jsx)("div",{children:"something went wrong"});const l=this.prepareForm(r,i,_serviceProxy.config);return(0,_jsxRuntime.jsx)(_ErrorBoundary.default,{children:(0,_jsxRuntime.jsx)(_EditServiceForm.default,{action:t,recipe:r,service:i,user:a.data,form:l,status:s.actionStatus,isSaving:s.updateServiceRequest.isExecuting||s.createServiceRequest.isExecuting,isDeleting:s.deleteServiceRequest.isExecuting,onSubmit:e=>this.onSubmit(e),onDelete:()=>this.deleteService(),openRecipeFile:e=>this.openRecipeFile(e),isProxyFeatureEnabled:_serviceProxy.config.isEnabled})})}}EditServiceScreen.propTypes={stores:_propTypes.default.shape({user:_propTypes.default.instanceOf(_UserStore.default).isRequired,recipes:_propTypes.default.instanceOf(_RecipesStore.default).isRequired,services:_propTypes.default.instanceOf(_ServicesStore.default).isRequired,settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired}).isRequired,router:_propTypes.default.instanceOf(_mobxReactRouter.RouterStore).isRequired,actions:_propTypes.default.shape({service:_propTypes.default.instanceOf(_ServicesStore.default).isRequired}).isRequired};var _default=(0,_reactIntl.injectIntl)((0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(EditServiceScreen)));exports.default=_default;