"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_UserStore=_interopRequireDefault(require("../../stores/UserStore")),_AppStore=_interopRequireDefault(require("../../stores/AppStore")),_SettingsStore=_interopRequireDefault(require("../../stores/SettingsStore")),_TeamDashboard=_interopRequireDefault(require("../../components/settings/team/TeamDashboard")),_ErrorBoundary=_interopRequireDefault(require("../../components/util/ErrorBoundary")),_config=require("../../config"),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class TeamScreen extends _react.Component{handleWebsiteLink(e){const{actions:r,stores:t}=this.props,s=`${_config.DEV_API_FRANZ_WEBSITE}/${e}?authToken=${t.user.authToken}&utm_source=app&utm_medium=account_dashboard`;r.app.openExternalUrl({url:s})}render(){const{user:e,settings:r}=this.props.stores,t=e.getUserInfoRequest.isExecuting,{server:s}=r.app;return(0,_jsxRuntime.jsx)(_ErrorBoundary.default,{children:(0,_jsxRuntime.jsx)(_TeamDashboard.default,{isLoading:t,userInfoRequestFailed:e.getUserInfoRequest.wasExecuted&&e.getUserInfoRequest.isError,retryUserInfoRequest:()=>this.reloadData(),openTeamManagement:()=>this.handleWebsiteLink("/user/team"),server:s})})}}TeamScreen.propTypes={stores:_propTypes.default.shape({user:_propTypes.default.instanceOf(_UserStore.default).isRequired,app:_propTypes.default.instanceOf(_AppStore.default).isRequired,settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired}).isRequired,actions:_propTypes.default.shape({app:_propTypes.default.instanceOf(_AppStore.default).isRequired,user:_propTypes.default.instanceOf(_UserStore.default).isRequired}).isRequired};var _default=(0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(TeamScreen));exports.default=_default;