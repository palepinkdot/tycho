"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_UserStore=_interopRequireDefault(require("../../stores/UserStore")),_AppStore=_interopRequireDefault(require("../../stores/AppStore")),_FeaturesStore=_interopRequireDefault(require("../../stores/FeaturesStore")),_SettingsStore=_interopRequireDefault(require("../../stores/SettingsStore")),_AccountDashboard=_interopRequireDefault(require("../../components/settings/account/AccountDashboard")),_ErrorBoundary=_interopRequireDefault(require("../../components/util/ErrorBoundary")),_config=require("../../config"),_environmentRemote=require("../../environment-remote"),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class AccountScreen extends _react.Component{onCloseWindow(){const{user:e,features:t}=this.props.stores;e.getUserInfoRequest.invalidate({immediately:!0}),t.featuresRequest.invalidate({immediately:!0})}reloadData(){const{user:e}=this.props.stores;e.getUserInfoRequest.reload()}handleWebsiteLink(e){const{actions:t,stores:r}=this.props,s=r.settings.all.app.server,o=s===_config.LIVE_FRANZ_API?r.user.getAuthURL(`${_environmentRemote.WEBSITE}${e}?utm_source=app&utm_medium=account_dashboard`):`${s}${e}`;t.app.openExternalUrl({url:o})}render(){const{user:e,settings:t}=this.props.stores,{user:r}=this.props.actions,s=e.getUserInfoRequest.isExecuting;return(0,_jsxRuntime.jsx)(_ErrorBoundary.default,{children:(0,_jsxRuntime.jsx)(_AccountDashboard.default,{server:t.all.app.server,user:e.data,isLoading:s,userInfoRequestFailed:e.getUserInfoRequest.wasExecuted&&e.getUserInfoRequest.isError,retryUserInfoRequest:()=>this.reloadData(),onCloseSubscriptionWindow:()=>this.onCloseWindow(),deleteAccount:r.delete,isLoadingDeleteAccount:e.deleteAccountRequest.isExecuting,isDeleteAccountSuccessful:e.deleteAccountRequest.wasExecuted&&!e.deleteAccountRequest.isError,openEditAccount:()=>this.handleWebsiteLink("/user/profile"),openInvoices:()=>this.handleWebsiteLink("/user/invoices")})})}}AccountScreen.propTypes={stores:_propTypes.default.shape({user:_propTypes.default.instanceOf(_UserStore.default).isRequired,features:_propTypes.default.instanceOf(_FeaturesStore.default).isRequired,settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired,app:_propTypes.default.instanceOf(_AppStore.default).isRequired}).isRequired,actions:_propTypes.default.shape({app:_propTypes.default.instanceOf(_AppStore.default).isRequired,user:_propTypes.default.instanceOf(_UserStore.default).isRequired}).isRequired};var _default=(0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(AccountScreen));exports.default=_default;