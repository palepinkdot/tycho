"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_Locked=_interopRequireDefault(require("../../components/auth/Locked")),_SettingsStore=_interopRequireDefault(require("../../stores/SettingsStore")),_passwordHelpers=require("../../helpers/password-helpers"),_UserStore=_interopRequireDefault(require("../../stores/UserStore")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class LockedScreen extends _react.Component{constructor(e){super(e),this.state={error:!1},this.onSubmit=this.onSubmit.bind(this),this.unlock=this.unlock.bind(this)}onSubmit(e){const{password:t}=e;let s=this.props.stores.settings.all.app.lockedPassword;s||(s=""),(0,_passwordHelpers.hash)(String(t))===String(s)?this.props.actions.settings.update({type:"app",data:{locked:!1}}):this.setState({error:{code:"invalid-credentials"}})}unlock(){this.props.actions.settings.update({type:"app",data:{locked:!1}})}render(){const{stores:e}=this.props,{useTouchIdToUnlock:t}=this.props.stores.settings.all.app;return(0,_jsxRuntime.jsx)("div",{className:"auth",children:(0,_jsxRuntime.jsx)("div",{className:"auth__layout",children:(0,_jsxRuntime.jsx)(_Locked.default,{onSubmit:this.onSubmit,unlock:this.unlock,useTouchIdToUnlock:t,isSubmitting:e.user.loginRequest.isExecuting,error:this.state.error||{}})})})}}LockedScreen.propTypes={actions:_propTypes.default.shape({settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired}).isRequired,stores:_propTypes.default.shape({settings:_propTypes.default.instanceOf(_SettingsStore.default).isRequired,user:_propTypes.default.instanceOf(_UserStore.default).isRequired}).isRequired};var _default=(0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(LockedScreen));exports.default=_default;