"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_mobxReact=require("mobx-react"),_mobxReactRouter=require("mobx-react-router"),_asyncHelpers=require("../../helpers/async-helpers"),_SetupAssistant=_interopRequireDefault(require("../../components/auth/SetupAssistant")),_ServicesStore=_interopRequireDefault(require("../../stores/ServicesStore")),_RecipesStore=_interopRequireDefault(require("../../stores/RecipesStore")),_UserStore=_interopRequireDefault(require("../../stores/UserStore")),_jsxRuntime=require("react/jsx-runtime");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class SetupAssistantScreen extends _react.Component{constructor(e){super(e),this.services={whatsapp:{name:"WhatsApp",hasTeamId:!1},messenger:{name:"Messenger",hasTeamId:!1},gmail:{name:"Gmail",hasTeamId:!1},skype:{name:"Skype",hasTeamId:!1},telegram:{name:"Telegram",hasTeamId:!1},instagram:{name:"Instagram",hasTeamId:!1},slack:{name:"Slack",hasTeamId:!0},hangouts:{name:"Hangouts",hasTeamId:!1},linkedin:{name:"LinkedIn",hasTeamId:!1}},this.state={isSettingUpServices:!1}}async setupServices(e){const{stores:{services:s,router:t}}=this.props;this.setState({isSettingUpServices:!0});for(const t of e){const e={name:this.services[t.id].name};t.team&&(e.team=t.team),await s._createService({recipeId:t.id,serviceData:e,redirect:!1,skipCleanup:!0}),await(0,_asyncHelpers.sleep)(100)}this.setState({isSettingUpServices:!1}),await(0,_asyncHelpers.sleep)(100),t.push("/")}render(){return(0,_jsxRuntime.jsx)(_SetupAssistant.default,{onSubmit:e=>this.setupServices(e),services:this.services,embed:!1,isSettingUpServices:this.state.isSettingUpServices})}}SetupAssistantScreen.propTypes={stores:_propTypes.default.shape({services:_propTypes.default.instanceOf(_ServicesStore.default),router:_propTypes.default.instanceOf(_mobxReactRouter.RouterStore).isRequired,recipes:_propTypes.default.instanceOf(_RecipesStore.default),user:_propTypes.default.instanceOf(_UserStore.default)}).isRequired,actions:_propTypes.default.shape({user:_propTypes.default.instanceOf(_UserStore.default).isRequired,service:_propTypes.default.instanceOf(_ServicesStore.default).isRequired,recipe:_propTypes.default.instanceOf(_RecipesStore.default).isRequired}).isRequired};var _default=(0,_mobxReact.inject)("stores","actions")((0,_mobxReact.observer)(SetupAssistantScreen));exports.default=_default;