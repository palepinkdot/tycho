"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),prop_types_1=(0,tslib_1.__importDefault)(require("prop-types")),Service_1=(0,tslib_1.__importDefault)(require("../models/Service"));exports.default={setActive:{serviceId:prop_types_1.default.string.isRequired,keepActiveRoute:prop_types_1.default.bool},blurActive:{},setActiveNext:{},setActivePrev:{},showAddServiceInterface:{recipeId:prop_types_1.default.string.isRequired},createService:{recipeId:prop_types_1.default.string.isRequired,serviceData:prop_types_1.default.object.isRequired},createFromLegacyService:{data:prop_types_1.default.object.isRequired},updateService:{serviceId:prop_types_1.default.string.isRequired,serviceData:prop_types_1.default.object.isRequired,redirect:prop_types_1.default.bool},deleteService:{serviceId:prop_types_1.default.string.isRequired,redirect:prop_types_1.default.string},openRecipeFile:{recipe:prop_types_1.default.string.isRequired,file:prop_types_1.default.string.isRequired},clearCache:{serviceId:prop_types_1.default.string.isRequired},setUnreadMessageCount:{serviceId:prop_types_1.default.string.isRequired,count:prop_types_1.default.object.isRequired},setDialogTitle:{serviceId:prop_types_1.default.string.isRequired,dialogTitle:prop_types_1.default.string.isRequired},setWebviewReference:{serviceId:prop_types_1.default.string.isRequired,webview:prop_types_1.default.object.isRequired},detachService:{service:prop_types_1.default.instanceOf(Service_1.default).isRequired},focusService:{serviceId:prop_types_1.default.string.isRequired},focusActiveService:{},toggleService:{serviceId:prop_types_1.default.string.isRequired},handleIPCMessage:{serviceId:prop_types_1.default.string.isRequired,channel:prop_types_1.default.string.isRequired,args:prop_types_1.default.array.isRequired},sendIPCMessage:{serviceId:prop_types_1.default.string.isRequired,channel:prop_types_1.default.string.isRequired,args:prop_types_1.default.object.isRequired},sendIPCMessageToAllServices:{channel:prop_types_1.default.string.isRequired,args:prop_types_1.default.object.isRequired},openWindow:{event:prop_types_1.default.object.isRequired},reload:{serviceId:prop_types_1.default.string.isRequired},reloadActive:{},reloadAll:{},reloadUpdatedServices:{},filter:{needle:prop_types_1.default.string.isRequired},resetFilter:{},resetStatus:{},reorder:{oldIndex:prop_types_1.default.number.isRequired,newIndex:prop_types_1.default.number.isRequired},toggleNotifications:{serviceId:prop_types_1.default.string.isRequired},toggleAudio:{serviceId:prop_types_1.default.string.isRequired},toggleDarkMode:{serviceId:prop_types_1.default.string.isRequired},openDevTools:{serviceId:prop_types_1.default.string.isRequired},openDevToolsForActiveService:{},hibernate:{serviceId:prop_types_1.default.string.isRequired},awake:{serviceId:prop_types_1.default.string.isRequired},resetLastPollTimer:{serviceId:prop_types_1.default.string},shareSettingsWithServiceProcess:{}};