"use strict";var _class,_descriptor,_electron=require("electron"),_path=require("path"),_mobx=require("mobx"),_fsExtra=require("fs-extra"),_lodash=require("lodash"),_darkreader=require("darkreader"),_fs=require("fs"),_ignore=_interopRequireDefault(require("./darkmode/ignore")),_custom=_interopRequireDefault(require("./darkmode/custom")),_RecipeWebview=_interopRequireDefault(require("./lib/RecipeWebview")),_Userscript=_interopRequireDefault(require("./lib/Userscript")),_badge=require("./badge"),_dialogTitle=require("./dialogTitle"),_sessionHandler=require("./sessionHandler"),_contextMenu=_interopRequireDefault(require("./contextMenu")),_darkmode=require("./darkmode"),_find=_interopRequireDefault(require("./find")),_notifications=require("./notifications"),_screenshare=require("./screenshare"),_spellchecker=require("./spellchecker"),_config=require("../config");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _initializerDefineProperty(e,i,t,r){t&&Object.defineProperty(e,i,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(r):void 0})}function _applyDecoratedDescriptor(e,i,t,r,s){var n={};return Object.keys(r).forEach((function(e){n[e]=r[e]})),n.enumerable=!!n.enumerable,n.configurable=!!n.configurable,("value"in n||n.initializer)&&(n.writable=!0),n=t.slice().reverse().reduce((function(t,r){return r(e,i,t)||t}),n),s&&void 0!==n.initializer&&(n.value=n.initializer?n.initializer.call(s):void 0,n.initializer=void 0),void 0===n.initializer&&(Object.defineProperty(e,i,n),n=null),n}function _initializerWarningHelper(e,i){throw new Error("Decorating class property failed. Please ensure that proposal-class-properties is enabled and runs after the decorators transform.")}window.chrome.runtime.sendMessage=()=>{};const debug=require("debug")("Ferdi:Plugin"),badgeHandler=new _badge.BadgeHandler,dialogTitleHandler=new _dialogTitle.DialogTitleHandler,sessionHandler=new _sessionHandler.SessionHandler,notificationsHandler=new _notifications.NotificationsHandler,originalWindowOpen=window.open;window.open=(e,i,t)=>{if(debug("window.open",e,i,t),!e){const e={location:{href:""}},r=setInterval((()=>{""!==e.location.href&&(t?originalWindowOpen(e.location.href,i,t):_electron.ipcRenderer.sendToHost("new-window",e.location.href),clearInterval(r))}),0);return setTimeout((()=>{clearInterval(r)}),1e3),e}return i||t||"string"==typeof t?e?originalWindowOpen(e,i,t):void 0:_electron.ipcRenderer.sendToHost("new-window",e)},_electron.contextBridge.exposeInMainWorld("ferdi",{open:window.open,setBadge:(e,i)=>badgeHandler.setBadge(e,i),safeParseInt:e=>badgeHandler.safeParseInt(e),setDialogTitle:e=>dialogTitleHandler.setDialogTitle(e),displayNotification:(e,i)=>notificationsHandler.displayNotification(e,i),getDisplayMediaSelector:_screenshare.getDisplayMediaSelector}),_electron.ipcRenderer.sendToHost("inject-js-unsafe","window.open = window.ferdi.open;",_notifications.notificationsClassDefinition,_screenshare.screenShareJs);let RecipeController=(_descriptor=_applyDecoratedDescriptor((_class=class{constructor(){_initializerDefineProperty(this,"settings",_descriptor,this),this.spellcheckProvider=null,this.ipcEvents={"initialize-recipe":"loadRecipeModule","settings-update":"updateAppSettings","service-settings-update":"updateServiceSettings","get-service-id":"serviceIdEcho","find-in-page":"openFindInPage"},this.universalDarkModeInjected=!1,this.recipe=null,this.userscript=null,this.hasUpdatedBeforeRecipeLoaded=!1,this.cldIdentifier=null,this.findInPage=null,this.initialize()}get spellcheckerLanguage(){return this.settings.service.spellcheckerLanguage||this.settings.app.spellcheckerLanguage}async initialize(){for(const e of Object.keys(this.ipcEvents))_electron.ipcRenderer.on(e,((...i)=>{debug("Received IPC event for channel",e,"with",...i),this[this.ipcEvents[e]](...i)}));debug('Send "hello" to host'),setTimeout((()=>_electron.ipcRenderer.sendToHost("hello")),100),this.spellcheckingProvider=null,(0,_contextMenu.default)((()=>this.settings.app.enableSpellchecking),(()=>this.settings.app.spellcheckerLanguage),(()=>this.spellcheckerLanguage),(()=>this.settings.app.searchEngine),(()=>this.settings.app.clipboardNotifications)),(0,_mobx.autorun)((()=>this.update())),document.addEventListener("DOMContentLoaded",(()=>{this.findInPage=new _find.default({inputFocusColor:"#CE9FFC",textColor:"#212121"})}))}loadRecipeModule(e,i,t){debug("loadRecipeModule");const r=(0,_path.join)(t.path,"webview.js");debug("module path",r),delete require.cache[require.resolve(r)];try{this.recipe=new _RecipeWebview.default(badgeHandler,dialogTitleHandler,notificationsHandler,sessionHandler),(0,_fs.existsSync)(r)&&(require(r)(this.recipe,{...i,recipe:t}),debug("Initialize Recipe",i,t)),this.settings.service=Object.assign(i,{recipe:t}),this.update()}catch(e){console.error("Recipe initialization failed",e)}this.loadUserFiles(t,i)}async loadUserFiles(e,i){const t=document.createElement("style");t.innerHTML=_screenshare.screenShareCss;const r=(0,_path.join)(e.path,"user.css");if((0,_fsExtra.pathExistsSync)(r)){const e=(0,_fsExtra.readFileSync)(r);t.innerHTML+=e.toString()}document.querySelector("head").append(t);const s=(0,_path.join)(e.path,"user.js");if((0,_fsExtra.pathExistsSync)(s)){const e=()=>{const e=require(s);"function"==typeof e&&(this.userscript=new _Userscript.default(this.recipe,this,i),e(i,this.userscript))};"loading"!==document.readyState?e():document.addEventListener("DOMContentLoaded",(()=>{e()}))}}openFindInPage(){this.findInPage.openFindWindow()}update(){if(debug("enableSpellchecking",this.settings.app.enableSpellchecking),debug("isDarkModeEnabled",this.settings.service.isDarkModeEnabled),debug("System spellcheckerLanguage",this.settings.app.spellcheckerLanguage),debug("Service spellcheckerLanguage",this.settings.service.spellcheckerLanguage),debug("darkReaderSettigs",this.settings.service.darkReaderSettings),debug("searchEngine",this.settings.app.searchEngine),this.userscript&&this.userscript.internal_setSettings&&this.userscript.internal_setSettings(this.settings),this.settings.app.enableSpellchecking){let{spellcheckerLanguage:e}=this;debug(`Setting spellchecker language to ${e}`),e.includes("automatic")&&(this.automaticLanguageDetection(),debug("Found `automatic` locale, falling back to user locale until detected",this.settings.app.locale),e=this.settings.app.locale),(0,_spellchecker.switchDict)(e,this.settings.service.id)}else debug("Disable spellchecker");this.recipe||(this.hasUpdatedBeforeRecipeLoaded=!0),debug("Darkmode enabled?",this.settings.service.isDarkModeEnabled,"Dark theme active?",this.settings.app.isDarkThemeActive);const e={removeDarkModeStyle:_darkmode.removeDarkModeStyle,disableDarkMode:_darkreader.disable,enableDarkMode:_darkreader.enable,injectDarkModeStyle:()=>(0,_darkmode.injectDarkModeStyle)(this.settings.service.recipe.path),isDarkModeStyleInjected:_darkmode.isDarkModeStyleInjected};if(this.settings.service.isDarkModeEnabled&&!1!==this.settings.app.isDarkThemeActive){if(debug("Enable dark mode"),this.recipe&&this.recipe.darkModeHandler)debug("Using custom dark mode handler"),this.hasUpdatedBeforeRecipeLoaded&&(this.hasUpdatedBeforeRecipeLoaded=!1,(0,_darkmode.removeDarkModeStyle)(),(0,_darkreader.disable)()),this.recipe.darkModeHandler(!0,e);else if((0,_darkmode.darkModeStyleExists)(this.settings.service.recipe.path))debug("Injecting darkmode from recipe"),(0,_darkmode.injectDarkModeStyle)(this.settings.service.recipe.path),(0,_darkreader.disable)(),this.universalDarkModeInjected=!1;else if(this.settings.app.universalDarkMode&&!_ignore.default.includes(window.location.host)){debug("Injecting Dark Reader");const{brightness:e,contrast:i,sepia:t}=this.settings.service.darkReaderSettings;(0,_darkreader.enable)({brightness:e,contrast:i,sepia:t},{css:_custom.default[window.location.host]||""}),this.universalDarkModeInjected=!0}}else debug("Remove dark mode"),debug("DarkMode disabled - removing remaining styles"),this.recipe&&this.recipe.darkModeHandler?(this.hasUpdatedBeforeRecipeLoaded&&(this.hasUpdatedBeforeRecipeLoaded=!1,(0,_darkmode.removeDarkModeStyle)(),(0,_darkreader.disable)()),this.recipe.darkModeHandler(!1,e)):(0,_darkmode.isDarkModeStyleInjected)()?(debug("Removing injected darkmode from recipe"),(0,_darkmode.removeDarkModeStyle)()):(debug("Removing Dark Reader"),(0,_darkreader.disable)(),this.universalDarkModeInjected=!1);!this.universalDarkModeInjected||this.settings.app.darkMode&&this.settings.service.isDarkModeEnabled&&this.settings.app.universalDarkMode||((0,_darkreader.disable)(),this.universalDarkModeInjected=!1)}updateAppSettings(e,i){this.settings.app=Object.assign(this.settings.app,i)}updateServiceSettings(e,i){this.settings.service=Object.assign(this.settings.service,i)}serviceIdEcho(e){debug("Received a service echo ping"),e.sender.send("service-id",this.settings.service.id)}async automaticLanguageDetection(){window.addEventListener("keyup",(0,_lodash.debounce)((async e=>{const i=e.target;if(!i)return;let t="";if(i.isContentEditable?t=i.textContent:i.value&&(t=i.value),t.length<25)return;debug("Detecting language for",t);const r=await _electron.ipcRenderer.invoke("detect-language",{sample:t});if(!r)return;const s=(0,_spellchecker.getSpellcheckerLocaleByFuzzyIdentifier)(r);debug("Language detected reliably, setting spellchecker language to",s),s&&(0,_spellchecker.switchDict)(s,this.settings.service.id)}),225))}}).prototype,"settings",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{overrideSpellcheckerLanguage:!1,app:_config.DEFAULT_APP_SETTINGS,service:{isDarkModeEnabled:!1,spellcheckerLanguage:""}}}}),_applyDecoratedDescriptor(_class.prototype,"spellcheckerLanguage",[_mobx.computed],Object.getOwnPropertyDescriptor(_class.prototype,"spellcheckerLanguage"),_class.prototype),_class);new RecipeController;