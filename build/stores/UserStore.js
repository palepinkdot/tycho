"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _class,_descriptor,_descriptor2,_descriptor3,_descriptor4,_descriptor5,_descriptor6,_descriptor7,_descriptor8,_descriptor9,_descriptor10,_descriptor11,_descriptor12,_descriptor13,_descriptor14,_descriptor15,_descriptor16,_descriptor17,_descriptor18,_mobx=require("mobx"),_moment=_interopRequireDefault(require("moment")),_jsonwebtoken=_interopRequireDefault(require("jsonwebtoken")),_mobxLocalstorage=_interopRequireDefault(require("mobx-localstorage")),_electron=require("electron"),_config=require("../config"),_environmentRemote=require("../environment-remote"),_Store=_interopRequireDefault(require("./lib/Store")),_Request=_interopRequireDefault(require("./lib/Request")),_CachedRequest=_interopRequireDefault(require("./lib/CachedRequest"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _initializerDefineProperty(e,t,r,i){r&&Object.defineProperty(e,t,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(i):void 0})}function _applyDecoratedDescriptor(e,t,r,i,s){var o={};return Object.keys(i).forEach((function(e){o[e]=i[e]})),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0),o=r.slice().reverse().reduce((function(r,i){return i(e,t,r)||r}),o),s&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(s):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(e,t,o),o=null),o}function _initializerWarningHelper(e,t){throw new Error("Decorating class property failed. Please ensure that proposal-class-properties is enabled and runs after the decorators transform.")}const debug=require("debug")("Ferdi:UserStore");let UserStore=(_class=class extends _Store.default{constructor(...e){super(...e),this.BASE_ROUTE="/auth",this.WELCOME_ROUTE=`${this.BASE_ROUTE}/welcome`,this.LOGIN_ROUTE=`${this.BASE_ROUTE}/login`,this.LOGOUT_ROUTE=`${this.BASE_ROUTE}/logout`,this.SIGNUP_ROUTE=`${this.BASE_ROUTE}/signup`,this.SETUP_ROUTE=`${this.BASE_ROUTE}/signup/setup`,this.IMPORT_ROUTE=`${this.BASE_ROUTE}/signup/import`,this.INVITE_ROUTE=`${this.BASE_ROUTE}/signup/invite`,this.PASSWORD_ROUTE=`${this.BASE_ROUTE}/password`,this.CHANGE_SERVER_ROUTE=`${this.BASE_ROUTE}/server`,_initializerDefineProperty(this,"loginRequest",_descriptor,this),_initializerDefineProperty(this,"signupRequest",_descriptor2,this),_initializerDefineProperty(this,"passwordRequest",_descriptor3,this),_initializerDefineProperty(this,"inviteRequest",_descriptor4,this),_initializerDefineProperty(this,"getUserInfoRequest",_descriptor5,this),_initializerDefineProperty(this,"updateUserInfoRequest",_descriptor6,this),_initializerDefineProperty(this,"getLegacyServicesRequest",_descriptor7,this),_initializerDefineProperty(this,"deleteAccountRequest",_descriptor8,this),_initializerDefineProperty(this,"isImportLegacyServicesExecuting",_descriptor9,this),_initializerDefineProperty(this,"isImportLegacyServicesCompleted",_descriptor10,this),_initializerDefineProperty(this,"isLoggingOut",_descriptor11,this),_initializerDefineProperty(this,"id",_descriptor12,this),_initializerDefineProperty(this,"authToken",_descriptor13,this),_initializerDefineProperty(this,"accountType",_descriptor14,this),_initializerDefineProperty(this,"hasCompletedSignup",_descriptor15,this),_initializerDefineProperty(this,"userData",_descriptor16,this),_initializerDefineProperty(this,"actionStatus",_descriptor17,this),this.logoutReasonTypes={SERVER:"SERVER"},_initializerDefineProperty(this,"logoutReason",_descriptor18,this),this.fetchUserInfoInterval=null,this._requireAuthenticatedUser=()=>{this.isTokenExpired&&this._logout();const{router:e}=this.stores,t=window.location.hash;if(!this.isLoggedIn&&t.includes("token=")){e.push(this.WELCOME_ROUTE);const r=t.split("=")[1];this._parseToken(r)&&setTimeout((()=>{this._tokenLogin(r)}),1e3)}else this.isLoggedIn||t.includes(this.BASE_ROUTE)?this.isLoggedIn&&t===this.LOGOUT_ROUTE?(this.actions.user.logout(),e.push(this.LOGIN_ROUTE)):this.isLoggedIn&&t.includes(this.BASE_ROUTE)&&(this.hasCompletedSignup||null===this.hasCompletedSignup)&&!_environmentRemote.isDevMode&&this.stores.router.push("/"):e.push(this.WELCOME_ROUTE)},this.actions.user.login.listen(this._login.bind(this)),this.actions.user.retrievePassword.listen(this._retrievePassword.bind(this)),this.actions.user.logout.listen(this._logout.bind(this)),this.actions.user.signup.listen(this._signup.bind(this)),this.actions.user.invite.listen(this._invite.bind(this)),this.actions.user.update.listen(this._update.bind(this)),this.actions.user.resetStatus.listen(this._resetStatus.bind(this)),this.actions.user.importLegacyServices.listen(this._importLegacyServices.bind(this)),this.actions.user.delete.listen(this._delete.bind(this)),this.registerReactions([this._requireAuthenticatedUser.bind(this),this._getUserData.bind(this)])}setup(){this._migrateUserLocale()}get loginRoute(){return this.LOGIN_ROUTE}get logoutRoute(){return this.LOGOUT_ROUTE}get signupRoute(){return this.SIGNUP_ROUTE}get setupRoute(){return this.SETUP_ROUTE}get inviteRoute(){return this.INVITE_ROUTE}get importRoute(){return this.IMPORT_ROUTE}get passwordRoute(){return this.PASSWORD_ROUTE}get changeServerRoute(){return this.CHANGE_SERVER_ROUTE}get isLoggedIn(){return Boolean(_mobxLocalstorage.default.getItem("authToken"))}get isTokenExpired(){if(!this.authToken)return!1;const{tokenExpiry:e}=this._parseToken(this.authToken);return null!==this.authToken&&(0,_moment.default)(e).isBefore((0,_moment.default)())}get data(){return this.isLoggedIn&&this.getUserInfoRequest.execute().result||{}}get team(){return this.data.team||null}get legacyServices(){return this.getLegacyServicesRequest.execute()||{}}async _login({email:e,password:t}){const r=await this.loginRequest.execute(e,t)._promise;this._setUserData(r),this.stores.router.push("/")}_tokenLogin(e){this._setUserData(e),this.stores.router.push("/")}async _signup({firstname:e,lastname:t,email:r,password:i,accountType:s,company:o,plan:a,currency:n}){const p=await this.signupRequest.execute({firstname:e,lastname:t,email:r,password:i,accountType:s,company:o,locale:this.stores.app.locale,plan:a,currency:n});this.hasCompletedSignup=!0,this._setUserData(p),this.stores.router.push(this.SETUP_ROUTE)}async _retrievePassword({email:e}){const t=this.passwordRequest.execute(e);await t._promise,this.actionStatus=t.result.status||[]}async _invite({invites:e}){const t=e.filter((e=>""!==e.email)),r=await this.inviteRequest.execute(t)._promise;this.actionStatus=r.status||[],this.stores.router.location.pathname.includes(this.INVITE_ROUTE)&&this.stores.router.push("/")}async _update({userData:e}){if(!this.isLoggedIn)return;const t=await this.updateUserInfoRequest.execute(e)._promise;this.getUserInfoRequest.patch((()=>t.data)),this.actionStatus=t.status||[]}_resetStatus(){this.actionStatus=[]}_logout(){_mobxLocalstorage.default.removeItem("authToken"),window.localStorage.removeItem("authToken"),this.getUserInfoRequest.invalidate().reset(),this.authToken=null,this.stores.services.allServicesRequest.invalidate().reset(),this.stores.todos.isTodosEnabled&&_electron.ipcRenderer.send("clear-storage-data",{sessionId:_config.TODOS_PARTITION_ID})}async _importLegacyServices({services:e}){this.isImportLegacyServicesExecuting=!0;const t=e.filter(((e,t,r)=>r.map((e=>e.recipe.id)).indexOf(e.recipe.id)===t)).map((e=>e.recipe.id));for(const e of t)await this.stores.recipes._install({recipeId:e});for(const t of e)this.actions.service.createFromLegacyService({data:t}),await this.stores.services.createServiceRequest._promise;this.isImportLegacyServicesExecuting=!1,this.isImportLegacyServicesCompleted=!0}async _delete(){this.deleteAccountRequest.execute()}async _getUserData(){if(this.isLoggedIn){let e;try{e=await this.getUserInfoRequest.execute()._promise}catch{return!1}this.actions.settings.update({type:"app",data:{beta:e.beta,locale:e.locale}})}}_parseToken(e){try{const t=_jsonwebtoken.default.decode(e);return{id:t.userId,tokenExpiry:_moment.default.unix(t.exp).toISOString(),authToken:e}}catch{return this._logout(),!1}}_setUserData(e){const t=this._parseToken(e);t.authToken?(_mobxLocalstorage.default.setItem("authToken",t.authToken),this.authToken=t.authToken,this.id=t.id):(this.authToken=null,this.id=null)}getAuthURL(e){const t=new URL(e),r=new URLSearchParams(t.search.slice(1));return r.append("authToken",this.authToken),`${t.origin}${t.pathname}?${r.toString()}`}async _migrateUserLocale(){try{await this.getUserInfoRequest._promise}catch{return!1}this.data.locale||(debug('Migrate "locale" to user data'),this.actions.user.update({userData:{locale:this.stores.app.locale}}))}},_descriptor=_applyDecoratedDescriptor(_class.prototype,"loginRequest",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _Request.default(this.api.user,"login")}}),_descriptor2=_applyDecoratedDescriptor(_class.prototype,"signupRequest",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _Request.default(this.api.user,"signup")}}),_descriptor3=_applyDecoratedDescriptor(_class.prototype,"passwordRequest",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _Request.default(this.api.user,"password")}}),_descriptor4=_applyDecoratedDescriptor(_class.prototype,"inviteRequest",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _Request.default(this.api.user,"invite")}}),_descriptor5=_applyDecoratedDescriptor(_class.prototype,"getUserInfoRequest",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _CachedRequest.default(this.api.user,"getInfo")}}),_descriptor6=_applyDecoratedDescriptor(_class.prototype,"updateUserInfoRequest",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _Request.default(this.api.user,"updateInfo")}}),_descriptor7=_applyDecoratedDescriptor(_class.prototype,"getLegacyServicesRequest",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _CachedRequest.default(this.api.user,"getLegacyServices")}}),_descriptor8=_applyDecoratedDescriptor(_class.prototype,"deleteAccountRequest",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _CachedRequest.default(this.api.user,"delete")}}),_descriptor9=_applyDecoratedDescriptor(_class.prototype,"isImportLegacyServicesExecuting",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),_descriptor10=_applyDecoratedDescriptor(_class.prototype,"isImportLegacyServicesCompleted",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),_descriptor11=_applyDecoratedDescriptor(_class.prototype,"isLoggingOut",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),_descriptor12=_applyDecoratedDescriptor(_class.prototype,"id",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_descriptor13=_applyDecoratedDescriptor(_class.prototype,"authToken",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _mobxLocalstorage.default.getItem("authToken")||null}}),_descriptor14=_applyDecoratedDescriptor(_class.prototype,"accountType",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_descriptor15=_applyDecoratedDescriptor(_class.prototype,"hasCompletedSignup",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),_descriptor16=_applyDecoratedDescriptor(_class.prototype,"userData",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{}}}),_descriptor17=_applyDecoratedDescriptor(_class.prototype,"actionStatus",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),_descriptor18=_applyDecoratedDescriptor(_class.prototype,"logoutReason",[_mobx.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_applyDecoratedDescriptor(_class.prototype,"isLoggedIn",[_mobx.computed],Object.getOwnPropertyDescriptor(_class.prototype,"isLoggedIn"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"isTokenExpired",[_mobx.computed],Object.getOwnPropertyDescriptor(_class.prototype,"isTokenExpired"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"data",[_mobx.computed],Object.getOwnPropertyDescriptor(_class.prototype,"data"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"team",[_mobx.computed],Object.getOwnPropertyDescriptor(_class.prototype,"team"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"legacyServices",[_mobx.computed],Object.getOwnPropertyDescriptor(_class.prototype,"legacyServices"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_login",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_login"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_tokenLogin",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_tokenLogin"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_signup",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_signup"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_retrievePassword",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_retrievePassword"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_invite",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_invite"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_update",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_update"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_resetStatus",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_resetStatus"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_logout",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_logout"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_importLegacyServices",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_importLegacyServices"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"_delete",[_mobx.action],Object.getOwnPropertyDescriptor(_class.prototype,"_delete"),_class.prototype),_class);exports.default=UserStore;